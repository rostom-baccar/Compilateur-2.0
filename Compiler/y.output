Nonterminals useless in grammar

    Comparator


Terminals unused in grammar

    tSTRING


Rules useless in grammar

   74 Comparator: tINF
   75           | tSUP
   76           | tEQEQ


Grammar

    0 $accept: Program $end

    1 Program: Main Functions

    2 Main: tVOID tMAIN tPO tPF tAO Body tAF

    3 Functions: Function
    4          | Function Functions

    5 $@1: %empty

    6 Function: tINT tID tPO DecArgs tPF tAO $@1 Body Return tAF

    7 $@2: %empty

    8 Function: tVOID tID tPO DecArgs tPF tAO $@2 Body tAF

    9 Return: tRETURN tID tPV
   10       | %empty

   11 FunCall: tID tPO CallArgs tPF tPV

   12 DecArgs: tINT tID NextDecArg
   13        | %empty

   14 NextDecArg: tV DecArgs
   15           | %empty

   16 CallArgs: Operand CallArgNext
   17         | %empty

   18 CallArgNext: tV CallArgs
   19            | %empty

   20 Type: tCONST
   21     | %empty

   22 Body: Instructions

   23 Instructions: Instruction Instructions
   24             | %empty

   25 Instruction: FunCall
   26            | Print
   27            | VarDeclarationAndAssign
   28            | VarDeclaration
   29            | VarAssign

   30 $@3: %empty

   31 $@4: %empty

   32 Instruction: ifCondition tAO $@3 Body tAF $@4 elseCondition

   33 $@5: %empty

   34 Instruction: whileCondition tAO $@5 Body tAF

   35 Print: tPRINT tPO PrintArg tPF tPV

   36 PrintArg: tID
   37         | tNB

   38 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV
   39                        | Type tINT tID tEQUAL tID tPV

   40 $@6: %empty

   41 VarDeclaration: Type tINT tID $@6 NextVar

   42 $@7: %empty

   43 NextVar: Type tV tID $@7 NextVar
   44        | tPV

   45 Operand: FunCall
   46        | Operations
   47        | tID
   48        | tNB

   49 Operations: Operand tADD Operand
   50           | Operand tSUB Operand
   51           | Operand tMUL Operand
   52           | Operand tDIV Operand

   53 VarAssign: tID tEQUAL Operand tPV

   54 $@8: %empty

   55 ifCondition: tIF tPO ifBoolExpression tPF $@8 elseCondition

   56 $@9: %empty

   57 elseCondition: tELSE tAO $@9 Body tAF
   58              | %empty

   59 whileCondition: tWHILE tPO whileBoolExpression tPF

   60 ifBoolExpression: ifComparaison
   61                 | tID
   62                 | tTRUE
   63                 | tFALSE

   64 ifComparaison: Operand tEQEQ Operand
   65              | Operand tINF Operand
   66              | Operand tSUP Operand

   67 whileBoolExpression: whileComparaison
   68                    | tID
   69                    | tTRUE
   70                    | tFALSE

   71 whileComparaison: Operand tEQEQ Operand
   72                 | Operand tINF Operand
   73                 | Operand tSUP Operand


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tMAIN (258) 2
    tRETURN (259) 9
    tIF (260) 55
    tWHILE (261) 59
    tPRINT (262) 35
    tELSE (263) 57
    tAO (264) 2 6 8 32 34 57
    tAF (265) 2 6 8 32 34 57
    tPO (266) 2 6 8 11 35 55 59
    tPF (267) 2 6 8 11 35 55 59
    tV (268) 14 18 43
    tPV (269) 9 11 35 38 39 44 53
    tEQUAL (270) 38 39 53
    tVOID (271) 2 8
    tINT (272) 6 12 38 39 41
    tSTRING (273)
    tSUB (274) 50
    tADD (275) 49
    tMUL (276) 51
    tDIV (277) 52
    tINF (278) 65 72
    tSUP (279) 66 73
    tEQEQ (280) 64 71
    tTRUE (281) 62 69
    tFALSE (282) 63 70
    tCONST (283) 20
    tNB <nb> (284) 37 38 48
    tID <string> (285) 6 8 9 11 12 36 38 39 41 43 47 53 61 68


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    Program (32)
        on left: 1
        on right: 0
    Main (33)
        on left: 2
        on right: 1
    Functions (34)
        on left: 3 4
        on right: 1 4
    Function (35)
        on left: 6 8
        on right: 3 4
    $@1 (36)
        on left: 5
        on right: 6
    $@2 (37)
        on left: 7
        on right: 8
    Return (38)
        on left: 9 10
        on right: 6
    FunCall (39)
        on left: 11
        on right: 25 45
    DecArgs (40)
        on left: 12 13
        on right: 6 8 14
    NextDecArg (41)
        on left: 14 15
        on right: 12
    CallArgs (42)
        on left: 16 17
        on right: 11 18
    CallArgNext (43)
        on left: 18 19
        on right: 16
    Type <nb> (44)
        on left: 20 21
        on right: 38 39 41 43
    Body (45)
        on left: 22
        on right: 2 6 8 32 34 57
    Instructions (46)
        on left: 23 24
        on right: 22 23
    Instruction (47)
        on left: 25 26 27 28 29 32 34
        on right: 23
    $@3 (48)
        on left: 30
        on right: 32
    $@4 (49)
        on left: 31
        on right: 32
    $@5 (50)
        on left: 33
        on right: 34
    Print (51)
        on left: 35
        on right: 26
    PrintArg (52)
        on left: 36 37
        on right: 35
    VarDeclarationAndAssign (53)
        on left: 38 39
        on right: 27
    VarDeclaration (54)
        on left: 41
        on right: 28
    $@6 (55)
        on left: 40
        on right: 41
    NextVar (56)
        on left: 43 44
        on right: 41 43
    $@7 (57)
        on left: 42
        on right: 43
    Operand (58)
        on left: 45 46 47 48
        on right: 16 49 50 51 52 53 64 65 66 71 72 73
    Operations (59)
        on left: 49 50 51 52
        on right: 46
    VarAssign (60)
        on left: 53
        on right: 29
    ifCondition (61)
        on left: 55
        on right: 32
    $@8 (62)
        on left: 54
        on right: 55
    elseCondition (63)
        on left: 57 58
        on right: 32 55
    $@9 (64)
        on left: 56
        on right: 57
    whileCondition (65)
        on left: 59
        on right: 34
    ifBoolExpression (66)
        on left: 60 61 62 63
        on right: 55
    ifComparaison (67)
        on left: 64 65 66
        on right: 60
    whileBoolExpression (68)
        on left: 67 68 69 70
        on right: 59
    whileComparaison (69)
        on left: 71 72 73
        on right: 67


State 0

    0 $accept: . Program $end

    tVOID  shift, and go to state 1

    Program  go to state 2
    Main     go to state 3


State 1

    2 Main: tVOID . tMAIN tPO tPF tAO Body tAF

    tMAIN  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: Main . Functions

    tVOID  shift, and go to state 6
    tINT   shift, and go to state 7

    Functions  go to state 8
    Function   go to state 9


State 4

    2 Main: tVOID tMAIN . tPO tPF tAO Body tAF

    tPO  shift, and go to state 10


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    8 Function: tVOID . tID tPO DecArgs tPF tAO $@2 Body tAF

    tID  shift, and go to state 11


State 7

    6 Function: tINT . tID tPO DecArgs tPF tAO $@1 Body Return tAF

    tID  shift, and go to state 12


State 8

    1 Program: Main Functions .

    $default  reduce using rule 1 (Program)


State 9

    3 Functions: Function .
    4          | Function . Functions

    tVOID  shift, and go to state 6
    tINT   shift, and go to state 7

    $default  reduce using rule 3 (Functions)

    Functions  go to state 13
    Function   go to state 9


State 10

    2 Main: tVOID tMAIN tPO . tPF tAO Body tAF

    tPF  shift, and go to state 14


State 11

    8 Function: tVOID tID . tPO DecArgs tPF tAO $@2 Body tAF

    tPO  shift, and go to state 15


State 12

    6 Function: tINT tID . tPO DecArgs tPF tAO $@1 Body Return tAF

    tPO  shift, and go to state 16


State 13

    4 Functions: Function Functions .

    $default  reduce using rule 4 (Functions)


State 14

    2 Main: tVOID tMAIN tPO tPF . tAO Body tAF

    tAO  shift, and go to state 17


State 15

    8 Function: tVOID tID tPO . DecArgs tPF tAO $@2 Body tAF

    tINT  shift, and go to state 18

    $default  reduce using rule 13 (DecArgs)

    DecArgs  go to state 19


State 16

    6 Function: tINT tID tPO . DecArgs tPF tAO $@1 Body Return tAF

    tINT  shift, and go to state 18

    $default  reduce using rule 13 (DecArgs)

    DecArgs  go to state 20


State 17

    2 Main: tVOID tMAIN tPO tPF tAO . Body tAF

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tAF       reduce using rule 24 (Instructions)
    $default  reduce using rule 21 (Type)

    FunCall                  go to state 26
    Type                     go to state 27
    Body                     go to state 28
    Instructions             go to state 29
    Instruction              go to state 30
    Print                    go to state 31
    VarDeclarationAndAssign  go to state 32
    VarDeclaration           go to state 33
    VarAssign                go to state 34
    ifCondition              go to state 35
    whileCondition           go to state 36


State 18

   12 DecArgs: tINT . tID NextDecArg

    tID  shift, and go to state 37


State 19

    8 Function: tVOID tID tPO DecArgs . tPF tAO $@2 Body tAF

    tPF  shift, and go to state 38


State 20

    6 Function: tINT tID tPO DecArgs . tPF tAO $@1 Body Return tAF

    tPF  shift, and go to state 39


State 21

   55 ifCondition: tIF . tPO ifBoolExpression tPF $@8 elseCondition

    tPO  shift, and go to state 40


State 22

   59 whileCondition: tWHILE . tPO whileBoolExpression tPF

    tPO  shift, and go to state 41


State 23

   35 Print: tPRINT . tPO PrintArg tPF tPV

    tPO  shift, and go to state 42


State 24

   20 Type: tCONST .

    $default  reduce using rule 20 (Type)


State 25

   11 FunCall: tID . tPO CallArgs tPF tPV
   53 VarAssign: tID . tEQUAL Operand tPV

    tPO     shift, and go to state 43
    tEQUAL  shift, and go to state 44


State 26

   25 Instruction: FunCall .

    $default  reduce using rule 25 (Instruction)


State 27

   38 VarDeclarationAndAssign: Type . tINT tID tEQUAL tNB tPV
   39                        | Type . tINT tID tEQUAL tID tPV
   41 VarDeclaration: Type . tINT tID $@6 NextVar

    tINT  shift, and go to state 45


State 28

    2 Main: tVOID tMAIN tPO tPF tAO Body . tAF

    tAF  shift, and go to state 46


State 29

   22 Body: Instructions .

    $default  reduce using rule 22 (Body)


State 30

   23 Instructions: Instruction . Instructions

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tINT      reduce using rule 21 (Type)
    $default  reduce using rule 24 (Instructions)

    FunCall                  go to state 26
    Type                     go to state 27
    Instructions             go to state 47
    Instruction              go to state 30
    Print                    go to state 31
    VarDeclarationAndAssign  go to state 32
    VarDeclaration           go to state 33
    VarAssign                go to state 34
    ifCondition              go to state 35
    whileCondition           go to state 36


State 31

   26 Instruction: Print .

    $default  reduce using rule 26 (Instruction)


State 32

   27 Instruction: VarDeclarationAndAssign .

    $default  reduce using rule 27 (Instruction)


State 33

   28 Instruction: VarDeclaration .

    $default  reduce using rule 28 (Instruction)


State 34

   29 Instruction: VarAssign .

    $default  reduce using rule 29 (Instruction)


State 35

   32 Instruction: ifCondition . tAO $@3 Body tAF $@4 elseCondition

    tAO  shift, and go to state 48


State 36

   34 Instruction: whileCondition . tAO $@5 Body tAF

    tAO  shift, and go to state 49


State 37

   12 DecArgs: tINT tID . NextDecArg

    tV  shift, and go to state 50

    $default  reduce using rule 15 (NextDecArg)

    NextDecArg  go to state 51


State 38

    8 Function: tVOID tID tPO DecArgs tPF . tAO $@2 Body tAF

    tAO  shift, and go to state 52


State 39

    6 Function: tINT tID tPO DecArgs tPF . tAO $@1 Body Return tAF

    tAO  shift, and go to state 53


State 40

   55 ifCondition: tIF tPO . ifBoolExpression tPF $@8 elseCondition

    tTRUE   shift, and go to state 54
    tFALSE  shift, and go to state 55
    tNB     shift, and go to state 56
    tID     shift, and go to state 57

    FunCall           go to state 58
    Operand           go to state 59
    Operations        go to state 60
    ifBoolExpression  go to state 61
    ifComparaison     go to state 62


State 41

   59 whileCondition: tWHILE tPO . whileBoolExpression tPF

    tTRUE   shift, and go to state 63
    tFALSE  shift, and go to state 64
    tNB     shift, and go to state 56
    tID     shift, and go to state 65

    FunCall              go to state 58
    Operand              go to state 66
    Operations           go to state 60
    whileBoolExpression  go to state 67
    whileComparaison     go to state 68


State 42

   35 Print: tPRINT tPO . PrintArg tPF tPV

    tNB  shift, and go to state 69
    tID  shift, and go to state 70

    PrintArg  go to state 71


State 43

   11 FunCall: tID tPO . CallArgs tPF tPV

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    $default  reduce using rule 17 (CallArgs)

    FunCall     go to state 58
    CallArgs    go to state 73
    Operand     go to state 74
    Operations  go to state 60


State 44

   53 VarAssign: tID tEQUAL . Operand tPV

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    FunCall     go to state 58
    Operand     go to state 75
    Operations  go to state 60


State 45

   38 VarDeclarationAndAssign: Type tINT . tID tEQUAL tNB tPV
   39                        | Type tINT . tID tEQUAL tID tPV
   41 VarDeclaration: Type tINT . tID $@6 NextVar

    tID  shift, and go to state 76


State 46

    2 Main: tVOID tMAIN tPO tPF tAO Body tAF .

    $default  reduce using rule 2 (Main)


State 47

   23 Instructions: Instruction Instructions .

    $default  reduce using rule 23 (Instructions)


State 48

   32 Instruction: ifCondition tAO . $@3 Body tAF $@4 elseCondition

    $default  reduce using rule 30 ($@3)

    $@3  go to state 77


State 49

   34 Instruction: whileCondition tAO . $@5 Body tAF

    $default  reduce using rule 33 ($@5)

    $@5  go to state 78


State 50

   14 NextDecArg: tV . DecArgs

    tINT  shift, and go to state 18

    $default  reduce using rule 13 (DecArgs)

    DecArgs  go to state 79


State 51

   12 DecArgs: tINT tID NextDecArg .

    $default  reduce using rule 12 (DecArgs)


State 52

    8 Function: tVOID tID tPO DecArgs tPF tAO . $@2 Body tAF

    $default  reduce using rule 7 ($@2)

    $@2  go to state 80


State 53

    6 Function: tINT tID tPO DecArgs tPF tAO . $@1 Body Return tAF

    $default  reduce using rule 5 ($@1)

    $@1  go to state 81


State 54

   62 ifBoolExpression: tTRUE .

    $default  reduce using rule 62 (ifBoolExpression)


State 55

   63 ifBoolExpression: tFALSE .

    $default  reduce using rule 63 (ifBoolExpression)


State 56

   48 Operand: tNB .

    $default  reduce using rule 48 (Operand)


State 57

   11 FunCall: tID . tPO CallArgs tPF tPV
   47 Operand: tID .
   61 ifBoolExpression: tID .

    tPO  shift, and go to state 43

    tPF       reduce using rule 61 (ifBoolExpression)
    $default  reduce using rule 47 (Operand)


State 58

   45 Operand: FunCall .

    $default  reduce using rule 45 (Operand)


State 59

   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand
   64 ifComparaison: Operand . tEQEQ Operand
   65              | Operand . tINF Operand
   66              | Operand . tSUP Operand

    tSUB   shift, and go to state 82
    tADD   shift, and go to state 83
    tMUL   shift, and go to state 84
    tDIV   shift, and go to state 85
    tINF   shift, and go to state 86
    tSUP   shift, and go to state 87
    tEQEQ  shift, and go to state 88


State 60

   46 Operand: Operations .

    $default  reduce using rule 46 (Operand)


State 61

   55 ifCondition: tIF tPO ifBoolExpression . tPF $@8 elseCondition

    tPF  shift, and go to state 89


State 62

   60 ifBoolExpression: ifComparaison .

    $default  reduce using rule 60 (ifBoolExpression)


State 63

   69 whileBoolExpression: tTRUE .

    $default  reduce using rule 69 (whileBoolExpression)


State 64

   70 whileBoolExpression: tFALSE .

    $default  reduce using rule 70 (whileBoolExpression)


State 65

   11 FunCall: tID . tPO CallArgs tPF tPV
   47 Operand: tID .
   68 whileBoolExpression: tID .

    tPO  shift, and go to state 43

    tPF       reduce using rule 68 (whileBoolExpression)
    $default  reduce using rule 47 (Operand)


State 66

   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand
   71 whileComparaison: Operand . tEQEQ Operand
   72                 | Operand . tINF Operand
   73                 | Operand . tSUP Operand

    tSUB   shift, and go to state 82
    tADD   shift, and go to state 83
    tMUL   shift, and go to state 84
    tDIV   shift, and go to state 85
    tINF   shift, and go to state 90
    tSUP   shift, and go to state 91
    tEQEQ  shift, and go to state 92


State 67

   59 whileCondition: tWHILE tPO whileBoolExpression . tPF

    tPF  shift, and go to state 93


State 68

   67 whileBoolExpression: whileComparaison .

    $default  reduce using rule 67 (whileBoolExpression)


State 69

   37 PrintArg: tNB .

    $default  reduce using rule 37 (PrintArg)


State 70

   36 PrintArg: tID .

    $default  reduce using rule 36 (PrintArg)


State 71

   35 Print: tPRINT tPO PrintArg . tPF tPV

    tPF  shift, and go to state 94


State 72

   11 FunCall: tID . tPO CallArgs tPF tPV
   47 Operand: tID .

    tPO  shift, and go to state 43

    $default  reduce using rule 47 (Operand)


State 73

   11 FunCall: tID tPO CallArgs . tPF tPV

    tPF  shift, and go to state 95


State 74

   16 CallArgs: Operand . CallArgNext
   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand

    tV    shift, and go to state 96
    tSUB  shift, and go to state 82
    tADD  shift, and go to state 83
    tMUL  shift, and go to state 84
    tDIV  shift, and go to state 85

    $default  reduce using rule 19 (CallArgNext)

    CallArgNext  go to state 97


State 75

   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand
   53 VarAssign: tID tEQUAL Operand . tPV

    tPV   shift, and go to state 98
    tSUB  shift, and go to state 82
    tADD  shift, and go to state 83
    tMUL  shift, and go to state 84
    tDIV  shift, and go to state 85


State 76

   38 VarDeclarationAndAssign: Type tINT tID . tEQUAL tNB tPV
   39                        | Type tINT tID . tEQUAL tID tPV
   41 VarDeclaration: Type tINT tID . $@6 NextVar

    tEQUAL  shift, and go to state 99

    $default  reduce using rule 40 ($@6)

    $@6  go to state 100


State 77

   32 Instruction: ifCondition tAO $@3 . Body tAF $@4 elseCondition

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tAF       reduce using rule 24 (Instructions)
    $default  reduce using rule 21 (Type)

    FunCall                  go to state 26
    Type                     go to state 27
    Body                     go to state 101
    Instructions             go to state 29
    Instruction              go to state 30
    Print                    go to state 31
    VarDeclarationAndAssign  go to state 32
    VarDeclaration           go to state 33
    VarAssign                go to state 34
    ifCondition              go to state 35
    whileCondition           go to state 36


State 78

   34 Instruction: whileCondition tAO $@5 . Body tAF

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tAF       reduce using rule 24 (Instructions)
    $default  reduce using rule 21 (Type)

    FunCall                  go to state 26
    Type                     go to state 27
    Body                     go to state 102
    Instructions             go to state 29
    Instruction              go to state 30
    Print                    go to state 31
    VarDeclarationAndAssign  go to state 32
    VarDeclaration           go to state 33
    VarAssign                go to state 34
    ifCondition              go to state 35
    whileCondition           go to state 36


State 79

   14 NextDecArg: tV DecArgs .

    $default  reduce using rule 14 (NextDecArg)


State 80

    8 Function: tVOID tID tPO DecArgs tPF tAO $@2 . Body tAF

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tAF       reduce using rule 24 (Instructions)
    $default  reduce using rule 21 (Type)

    FunCall                  go to state 26
    Type                     go to state 27
    Body                     go to state 103
    Instructions             go to state 29
    Instruction              go to state 30
    Print                    go to state 31
    VarDeclarationAndAssign  go to state 32
    VarDeclaration           go to state 33
    VarAssign                go to state 34
    ifCondition              go to state 35
    whileCondition           go to state 36


State 81

    6 Function: tINT tID tPO DecArgs tPF tAO $@1 . Body Return tAF

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tINT      reduce using rule 21 (Type)
    $default  reduce using rule 24 (Instructions)

    FunCall                  go to state 26
    Type                     go to state 27
    Body                     go to state 104
    Instructions             go to state 29
    Instruction              go to state 30
    Print                    go to state 31
    VarDeclarationAndAssign  go to state 32
    VarDeclaration           go to state 33
    VarAssign                go to state 34
    ifCondition              go to state 35
    whileCondition           go to state 36


State 82

   50 Operations: Operand tSUB . Operand

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    FunCall     go to state 58
    Operand     go to state 105
    Operations  go to state 60


State 83

   49 Operations: Operand tADD . Operand

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    FunCall     go to state 58
    Operand     go to state 106
    Operations  go to state 60


State 84

   51 Operations: Operand tMUL . Operand

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    FunCall     go to state 58
    Operand     go to state 107
    Operations  go to state 60


State 85

   52 Operations: Operand tDIV . Operand

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    FunCall     go to state 58
    Operand     go to state 108
    Operations  go to state 60


State 86

   65 ifComparaison: Operand tINF . Operand

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    FunCall     go to state 58
    Operand     go to state 109
    Operations  go to state 60


State 87

   66 ifComparaison: Operand tSUP . Operand

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    FunCall     go to state 58
    Operand     go to state 110
    Operations  go to state 60


State 88

   64 ifComparaison: Operand tEQEQ . Operand

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    FunCall     go to state 58
    Operand     go to state 111
    Operations  go to state 60


State 89

   55 ifCondition: tIF tPO ifBoolExpression tPF . $@8 elseCondition

    $default  reduce using rule 54 ($@8)

    $@8  go to state 112


State 90

   72 whileComparaison: Operand tINF . Operand

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    FunCall     go to state 58
    Operand     go to state 113
    Operations  go to state 60


State 91

   73 whileComparaison: Operand tSUP . Operand

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    FunCall     go to state 58
    Operand     go to state 114
    Operations  go to state 60


State 92

   71 whileComparaison: Operand tEQEQ . Operand

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    FunCall     go to state 58
    Operand     go to state 115
    Operations  go to state 60


State 93

   59 whileCondition: tWHILE tPO whileBoolExpression tPF .

    $default  reduce using rule 59 (whileCondition)


State 94

   35 Print: tPRINT tPO PrintArg tPF . tPV

    tPV  shift, and go to state 116


State 95

   11 FunCall: tID tPO CallArgs tPF . tPV

    tPV  shift, and go to state 117


State 96

   18 CallArgNext: tV . CallArgs

    tNB  shift, and go to state 56
    tID  shift, and go to state 72

    $default  reduce using rule 17 (CallArgs)

    FunCall     go to state 58
    CallArgs    go to state 118
    Operand     go to state 74
    Operations  go to state 60


State 97

   16 CallArgs: Operand CallArgNext .

    $default  reduce using rule 16 (CallArgs)


State 98

   53 VarAssign: tID tEQUAL Operand tPV .

    $default  reduce using rule 53 (VarAssign)


State 99

   38 VarDeclarationAndAssign: Type tINT tID tEQUAL . tNB tPV
   39                        | Type tINT tID tEQUAL . tID tPV

    tNB  shift, and go to state 119
    tID  shift, and go to state 120


State 100

   41 VarDeclaration: Type tINT tID $@6 . NextVar

    tPV     shift, and go to state 121
    tCONST  shift, and go to state 24

    $default  reduce using rule 21 (Type)

    Type     go to state 122
    NextVar  go to state 123


State 101

   32 Instruction: ifCondition tAO $@3 Body . tAF $@4 elseCondition

    tAF  shift, and go to state 124


State 102

   34 Instruction: whileCondition tAO $@5 Body . tAF

    tAF  shift, and go to state 125


State 103

    8 Function: tVOID tID tPO DecArgs tPF tAO $@2 Body . tAF

    tAF  shift, and go to state 126


State 104

    6 Function: tINT tID tPO DecArgs tPF tAO $@1 Body . Return tAF

    tRETURN  shift, and go to state 127

    $default  reduce using rule 10 (Return)

    Return  go to state 128


State 105

   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   50           | Operand tSUB Operand .
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand

    tMUL  shift, and go to state 84
    tDIV  shift, and go to state 85

    $default  reduce using rule 50 (Operations)


State 106

   49 Operations: Operand . tADD Operand
   49           | Operand tADD Operand .
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand

    tMUL  shift, and go to state 84
    tDIV  shift, and go to state 85

    $default  reduce using rule 49 (Operations)


State 107

   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   51           | Operand tMUL Operand .
   52           | Operand . tDIV Operand

    $default  reduce using rule 51 (Operations)


State 108

   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand
   52           | Operand tDIV Operand .

    $default  reduce using rule 52 (Operations)


State 109

   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand
   65 ifComparaison: Operand tINF Operand .

    tSUB  shift, and go to state 82
    tADD  shift, and go to state 83
    tMUL  shift, and go to state 84
    tDIV  shift, and go to state 85

    $default  reduce using rule 65 (ifComparaison)


State 110

   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand
   66 ifComparaison: Operand tSUP Operand .

    tSUB  shift, and go to state 82
    tADD  shift, and go to state 83
    tMUL  shift, and go to state 84
    tDIV  shift, and go to state 85

    $default  reduce using rule 66 (ifComparaison)


State 111

   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand
   64 ifComparaison: Operand tEQEQ Operand .

    tSUB  shift, and go to state 82
    tADD  shift, and go to state 83
    tMUL  shift, and go to state 84
    tDIV  shift, and go to state 85

    $default  reduce using rule 64 (ifComparaison)


State 112

   55 ifCondition: tIF tPO ifBoolExpression tPF $@8 . elseCondition

    tELSE  shift, and go to state 129

    $default  reduce using rule 58 (elseCondition)

    elseCondition  go to state 130


State 113

   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand
   72 whileComparaison: Operand tINF Operand .

    tSUB  shift, and go to state 82
    tADD  shift, and go to state 83
    tMUL  shift, and go to state 84
    tDIV  shift, and go to state 85

    $default  reduce using rule 72 (whileComparaison)


State 114

   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand
   73 whileComparaison: Operand tSUP Operand .

    tSUB  shift, and go to state 82
    tADD  shift, and go to state 83
    tMUL  shift, and go to state 84
    tDIV  shift, and go to state 85

    $default  reduce using rule 73 (whileComparaison)


State 115

   49 Operations: Operand . tADD Operand
   50           | Operand . tSUB Operand
   51           | Operand . tMUL Operand
   52           | Operand . tDIV Operand
   71 whileComparaison: Operand tEQEQ Operand .

    tSUB  shift, and go to state 82
    tADD  shift, and go to state 83
    tMUL  shift, and go to state 84
    tDIV  shift, and go to state 85

    $default  reduce using rule 71 (whileComparaison)


State 116

   35 Print: tPRINT tPO PrintArg tPF tPV .

    $default  reduce using rule 35 (Print)


State 117

   11 FunCall: tID tPO CallArgs tPF tPV .

    $default  reduce using rule 11 (FunCall)


State 118

   18 CallArgNext: tV CallArgs .

    $default  reduce using rule 18 (CallArgNext)


State 119

   38 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB . tPV

    tPV  shift, and go to state 131


State 120

   39 VarDeclarationAndAssign: Type tINT tID tEQUAL tID . tPV

    tPV  shift, and go to state 132


State 121

   44 NextVar: tPV .

    $default  reduce using rule 44 (NextVar)


State 122

   43 NextVar: Type . tV tID $@7 NextVar

    tV  shift, and go to state 133


State 123

   41 VarDeclaration: Type tINT tID $@6 NextVar .

    $default  reduce using rule 41 (VarDeclaration)


State 124

   32 Instruction: ifCondition tAO $@3 Body tAF . $@4 elseCondition

    $default  reduce using rule 31 ($@4)

    $@4  go to state 134


State 125

   34 Instruction: whileCondition tAO $@5 Body tAF .

    $default  reduce using rule 34 (Instruction)


State 126

    8 Function: tVOID tID tPO DecArgs tPF tAO $@2 Body tAF .

    $default  reduce using rule 8 (Function)


State 127

    9 Return: tRETURN . tID tPV

    tID  shift, and go to state 135


State 128

    6 Function: tINT tID tPO DecArgs tPF tAO $@1 Body Return . tAF

    tAF  shift, and go to state 136


State 129

   57 elseCondition: tELSE . tAO $@9 Body tAF

    tAO  shift, and go to state 137


State 130

   55 ifCondition: tIF tPO ifBoolExpression tPF $@8 elseCondition .

    $default  reduce using rule 55 (ifCondition)


State 131

   38 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV .

    $default  reduce using rule 38 (VarDeclarationAndAssign)


State 132

   39 VarDeclarationAndAssign: Type tINT tID tEQUAL tID tPV .

    $default  reduce using rule 39 (VarDeclarationAndAssign)


State 133

   43 NextVar: Type tV . tID $@7 NextVar

    tID  shift, and go to state 138


State 134

   32 Instruction: ifCondition tAO $@3 Body tAF $@4 . elseCondition

    tELSE  shift, and go to state 129

    $default  reduce using rule 58 (elseCondition)

    elseCondition  go to state 139


State 135

    9 Return: tRETURN tID . tPV

    tPV  shift, and go to state 140


State 136

    6 Function: tINT tID tPO DecArgs tPF tAO $@1 Body Return tAF .

    $default  reduce using rule 6 (Function)


State 137

   57 elseCondition: tELSE tAO . $@9 Body tAF

    $default  reduce using rule 56 ($@9)

    $@9  go to state 141


State 138

   43 NextVar: Type tV tID . $@7 NextVar

    $default  reduce using rule 42 ($@7)

    $@7  go to state 142


State 139

   32 Instruction: ifCondition tAO $@3 Body tAF $@4 elseCondition .

    $default  reduce using rule 32 (Instruction)


State 140

    9 Return: tRETURN tID tPV .

    $default  reduce using rule 9 (Return)


State 141

   57 elseCondition: tELSE tAO $@9 . Body tAF

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tAF       reduce using rule 24 (Instructions)
    $default  reduce using rule 21 (Type)

    FunCall                  go to state 26
    Type                     go to state 27
    Body                     go to state 143
    Instructions             go to state 29
    Instruction              go to state 30
    Print                    go to state 31
    VarDeclarationAndAssign  go to state 32
    VarDeclaration           go to state 33
    VarAssign                go to state 34
    ifCondition              go to state 35
    whileCondition           go to state 36


State 142

   43 NextVar: Type tV tID $@7 . NextVar

    tPV     shift, and go to state 121
    tCONST  shift, and go to state 24

    $default  reduce using rule 21 (Type)

    Type     go to state 122
    NextVar  go to state 144


State 143

   57 elseCondition: tELSE tAO $@9 Body . tAF

    tAF  shift, and go to state 145


State 144

   43 NextVar: Type tV tID $@7 NextVar .

    $default  reduce using rule 43 (NextVar)


State 145

   57 elseCondition: tELSE tAO $@9 Body tAF .

    $default  reduce using rule 57 (elseCondition)
