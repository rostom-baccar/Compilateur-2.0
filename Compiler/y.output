Nonterminals useless in grammar

    Comparator


Terminals unused in grammar

    tSTRING


Rules useless in grammar

   81 Comparator: tINF
   82           | tSUP
   83           | tEQEQ


Grammar

    0 $accept: Program $end

    1 Program: Main Functions

    2 Main: tVOID tMAIN tPO tPF tAO Body tAF

    3 Functions: Function
    4          | Function Functions

    5 $@1: %empty

    6 $@2: %empty

    7 $@3: %empty

    8 $@4: %empty

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

   10 $@5: %empty

   11 $@6: %empty

   12 $@7: %empty

   13 Function: tVOID tID tPO $@5 DecArgs $@6 tPF tAO $@7 Body tAF

   14 $@8: %empty

   15 FunCall: tID tPO $@8 CallArgs tPF

   16 $@9: %empty

   17 DecArgs: tINT tID $@9 NextDecArg
   18        | %empty

   19 NextDecArg: tV DecArgs
   20           | %empty

   21 $@10: %empty

   22 CallArgs: tID $@10 CallArgNext
   23         | tNB CallArgNext
   24         | %empty

   25 CallArgNext: tV CallArgs
   26            | %empty

   27 Type: tCONST
   28     | %empty

   29 Body: Instructions

   30 Instructions: Instruction Instructions
   31             | %empty

   32 Instruction: FunCall tPV
   33            | Print
   34            | VarDeclarationAndAssign
   35            | VarDeclaration
   36            | VarAssign

   37 $@11: %empty

   38 $@12: %empty

   39 Instruction: ifCondition tAO $@11 Body tAF $@12 elseCondition

   40 $@13: %empty

   41 Instruction: whileCondition tAO $@13 Body tAF

   42 Print: tPRINT tPO PrintArg tPF tPV

   43 PrintArg: tID
   44         | tNB

   45 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV
   46                        | Type tINT tID tEQUAL tID tPV

   47 $@14: %empty

   48 VarDeclaration: Type tINT tID $@14 NextVar

   49 $@15: %empty

   50 NextVar: Type tV tID $@15 NextVar
   51        | tPV

   52 Operand: FunCall
   53        | Operations
   54        | tID
   55        | tNB

   56 Operations: Operand tADD Operand
   57           | Operand tSUB Operand
   58           | Operand tMUL Operand
   59           | Operand tDIV Operand

   60 VarAssign: tID tEQUAL Operand tPV

   61 $@16: %empty

   62 ifCondition: tIF tPO ifBoolExpression tPF $@16 elseCondition

   63 $@17: %empty

   64 elseCondition: tELSE tAO $@17 Body tAF
   65              | %empty

   66 whileCondition: tWHILE tPO whileBoolExpression tPF

   67 ifBoolExpression: ifComparaison
   68                 | tID
   69                 | tTRUE
   70                 | tFALSE

   71 ifComparaison: Operand tEQEQ Operand
   72              | Operand tINF Operand
   73              | Operand tSUP Operand

   74 whileBoolExpression: whileComparaison
   75                    | tID
   76                    | tTRUE
   77                    | tFALSE

   78 whileComparaison: Operand tEQEQ Operand
   79                 | Operand tINF Operand
   80                 | Operand tSUP Operand


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tMAIN (258) 2
    tRETURN (259) 9
    tIF (260) 62
    tWHILE (261) 66
    tPRINT (262) 42
    tELSE (263) 64
    tAO (264) 2 9 13 39 41 64
    tAF (265) 2 9 13 39 41 64
    tPO (266) 2 9 13 15 42 62 66
    tPF (267) 2 9 13 15 42 62 66
    tV (268) 19 25 50
    tPV (269) 9 32 42 45 46 51 60
    tEQUAL (270) 45 46 60
    tVOID (271) 2 13
    tINT (272) 9 17 45 46 48
    tSTRING (273)
    tSUB (274) 57
    tADD (275) 56
    tMUL (276) 58
    tDIV (277) 59
    tINF (278) 72 79
    tSUP (279) 73 80
    tEQEQ (280) 71 78
    tTRUE (281) 69 76
    tFALSE (282) 70 77
    tCONST (283) 27
    tNB <nb> (284) 23 44 45 55
    tID <string> (285) 9 13 15 17 22 43 45 46 48 50 54 60 68 75


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    Program (32)
        on left: 1
        on right: 0
    Main (33)
        on left: 2
        on right: 1
    Functions (34)
        on left: 3 4
        on right: 1 4
    Function (35)
        on left: 9 13
        on right: 3 4
    $@1 (36)
        on left: 5
        on right: 9
    $@2 (37)
        on left: 6
        on right: 9
    $@3 (38)
        on left: 7
        on right: 9
    $@4 (39)
        on left: 8
        on right: 9
    $@5 (40)
        on left: 10
        on right: 13
    $@6 (41)
        on left: 11
        on right: 13
    $@7 (42)
        on left: 12
        on right: 13
    FunCall (43)
        on left: 15
        on right: 32 52
    $@8 (44)
        on left: 14
        on right: 15
    DecArgs (45)
        on left: 17 18
        on right: 9 13 19
    $@9 (46)
        on left: 16
        on right: 17
    NextDecArg (47)
        on left: 19 20
        on right: 17
    CallArgs (48)
        on left: 22 23 24
        on right: 15 25
    $@10 (49)
        on left: 21
        on right: 22
    CallArgNext (50)
        on left: 25 26
        on right: 22 23
    Type <nb> (51)
        on left: 27 28
        on right: 45 46 48 50
    Body (52)
        on left: 29
        on right: 2 9 13 39 41 64
    Instructions (53)
        on left: 30 31
        on right: 29 30
    Instruction (54)
        on left: 32 33 34 35 36 39 41
        on right: 30
    $@11 (55)
        on left: 37
        on right: 39
    $@12 (56)
        on left: 38
        on right: 39
    $@13 (57)
        on left: 40
        on right: 41
    Print (58)
        on left: 42
        on right: 33
    PrintArg (59)
        on left: 43 44
        on right: 42
    VarDeclarationAndAssign (60)
        on left: 45 46
        on right: 34
    VarDeclaration (61)
        on left: 48
        on right: 35
    $@14 (62)
        on left: 47
        on right: 48
    NextVar (63)
        on left: 50 51
        on right: 48 50
    $@15 (64)
        on left: 49
        on right: 50
    Operand (65)
        on left: 52 53 54 55
        on right: 56 57 58 59 60 71 72 73 78 79 80
    Operations (66)
        on left: 56 57 58 59
        on right: 53
    VarAssign (67)
        on left: 60
        on right: 36
    ifCondition (68)
        on left: 62
        on right: 39
    $@16 (69)
        on left: 61
        on right: 62
    elseCondition (70)
        on left: 64 65
        on right: 39 62
    $@17 (71)
        on left: 63
        on right: 64
    whileCondition (72)
        on left: 66
        on right: 41
    ifBoolExpression (73)
        on left: 67 68 69 70
        on right: 62
    ifComparaison (74)
        on left: 71 72 73
        on right: 67
    whileBoolExpression (75)
        on left: 74 75 76 77
        on right: 66
    whileComparaison (76)
        on left: 78 79 80
        on right: 74


State 0

    0 $accept: . Program $end

    tVOID  shift, and go to state 1

    Program  go to state 2
    Main     go to state 3


State 1

    2 Main: tVOID . tMAIN tPO tPF tAO Body tAF

    tMAIN  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: Main . Functions

    tVOID  shift, and go to state 6
    tINT   shift, and go to state 7

    Functions  go to state 8
    Function   go to state 9


State 4

    2 Main: tVOID tMAIN . tPO tPF tAO Body tAF

    tPO  shift, and go to state 10


State 5

    0 $accept: Program $end .

    $default  accept


State 6

   13 Function: tVOID . tID tPO $@5 DecArgs $@6 tPF tAO $@7 Body tAF

    tID  shift, and go to state 11


State 7

    9 Function: tINT . tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

    tID  shift, and go to state 12


State 8

    1 Program: Main Functions .

    $default  reduce using rule 1 (Program)


State 9

    3 Functions: Function .
    4          | Function . Functions

    tVOID  shift, and go to state 6
    tINT   shift, and go to state 7

    $default  reduce using rule 3 (Functions)

    Functions  go to state 13
    Function   go to state 9


State 10

    2 Main: tVOID tMAIN tPO . tPF tAO Body tAF

    tPF  shift, and go to state 14


State 11

   13 Function: tVOID tID . tPO $@5 DecArgs $@6 tPF tAO $@7 Body tAF

    tPO  shift, and go to state 15


State 12

    9 Function: tINT tID . tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

    tPO  shift, and go to state 16


State 13

    4 Functions: Function Functions .

    $default  reduce using rule 4 (Functions)


State 14

    2 Main: tVOID tMAIN tPO tPF . tAO Body tAF

    tAO  shift, and go to state 17


State 15

   13 Function: tVOID tID tPO . $@5 DecArgs $@6 tPF tAO $@7 Body tAF

    $default  reduce using rule 10 ($@5)

    $@5  go to state 18


State 16

    9 Function: tINT tID tPO . $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

    $default  reduce using rule 5 ($@1)

    $@1  go to state 19


State 17

    2 Main: tVOID tMAIN tPO tPF tAO . Body tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 31 (Instructions)
    $default  reduce using rule 28 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 27
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 18

   13 Function: tVOID tID tPO $@5 . DecArgs $@6 tPF tAO $@7 Body tAF

    tINT  shift, and go to state 36

    $default  reduce using rule 18 (DecArgs)

    DecArgs  go to state 37


State 19

    9 Function: tINT tID tPO $@1 . DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

    tINT  shift, and go to state 36

    $default  reduce using rule 18 (DecArgs)

    DecArgs  go to state 38


State 20

   62 ifCondition: tIF . tPO ifBoolExpression tPF $@16 elseCondition

    tPO  shift, and go to state 39


State 21

   66 whileCondition: tWHILE . tPO whileBoolExpression tPF

    tPO  shift, and go to state 40


State 22

   42 Print: tPRINT . tPO PrintArg tPF tPV

    tPO  shift, and go to state 41


State 23

   27 Type: tCONST .

    $default  reduce using rule 27 (Type)


State 24

   15 FunCall: tID . tPO $@8 CallArgs tPF
   60 VarAssign: tID . tEQUAL Operand tPV

    tPO     shift, and go to state 42
    tEQUAL  shift, and go to state 43


State 25

   32 Instruction: FunCall . tPV

    tPV  shift, and go to state 44


State 26

   45 VarDeclarationAndAssign: Type . tINT tID tEQUAL tNB tPV
   46                        | Type . tINT tID tEQUAL tID tPV
   48 VarDeclaration: Type . tINT tID $@14 NextVar

    tINT  shift, and go to state 45


State 27

    2 Main: tVOID tMAIN tPO tPF tAO Body . tAF

    tAF  shift, and go to state 46


State 28

   29 Body: Instructions .

    $default  reduce using rule 29 (Body)


State 29

   30 Instructions: Instruction . Instructions

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tINT      reduce using rule 28 (Type)
    $default  reduce using rule 31 (Instructions)

    FunCall                  go to state 25
    Type                     go to state 26
    Instructions             go to state 47
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 30

   33 Instruction: Print .

    $default  reduce using rule 33 (Instruction)


State 31

   34 Instruction: VarDeclarationAndAssign .

    $default  reduce using rule 34 (Instruction)


State 32

   35 Instruction: VarDeclaration .

    $default  reduce using rule 35 (Instruction)


State 33

   36 Instruction: VarAssign .

    $default  reduce using rule 36 (Instruction)


State 34

   39 Instruction: ifCondition . tAO $@11 Body tAF $@12 elseCondition

    tAO  shift, and go to state 48


State 35

   41 Instruction: whileCondition . tAO $@13 Body tAF

    tAO  shift, and go to state 49


State 36

   17 DecArgs: tINT . tID $@9 NextDecArg

    tID  shift, and go to state 50


State 37

   13 Function: tVOID tID tPO $@5 DecArgs . $@6 tPF tAO $@7 Body tAF

    $default  reduce using rule 11 ($@6)

    $@6  go to state 51


State 38

    9 Function: tINT tID tPO $@1 DecArgs . $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

    $default  reduce using rule 6 ($@2)

    $@2  go to state 52


State 39

   62 ifCondition: tIF tPO . ifBoolExpression tPF $@16 elseCondition

    tTRUE   shift, and go to state 53
    tFALSE  shift, and go to state 54
    tNB     shift, and go to state 55
    tID     shift, and go to state 56

    FunCall           go to state 57
    Operand           go to state 58
    Operations        go to state 59
    ifBoolExpression  go to state 60
    ifComparaison     go to state 61


State 40

   66 whileCondition: tWHILE tPO . whileBoolExpression tPF

    tTRUE   shift, and go to state 62
    tFALSE  shift, and go to state 63
    tNB     shift, and go to state 55
    tID     shift, and go to state 64

    FunCall              go to state 57
    Operand              go to state 65
    Operations           go to state 59
    whileBoolExpression  go to state 66
    whileComparaison     go to state 67


State 41

   42 Print: tPRINT tPO . PrintArg tPF tPV

    tNB  shift, and go to state 68
    tID  shift, and go to state 69

    PrintArg  go to state 70


State 42

   15 FunCall: tID tPO . $@8 CallArgs tPF

    $default  reduce using rule 14 ($@8)

    $@8  go to state 71


State 43

   60 VarAssign: tID tEQUAL . Operand tPV

    tNB  shift, and go to state 55
    tID  shift, and go to state 72

    FunCall     go to state 57
    Operand     go to state 73
    Operations  go to state 59


State 44

   32 Instruction: FunCall tPV .

    $default  reduce using rule 32 (Instruction)


State 45

   45 VarDeclarationAndAssign: Type tINT . tID tEQUAL tNB tPV
   46                        | Type tINT . tID tEQUAL tID tPV
   48 VarDeclaration: Type tINT . tID $@14 NextVar

    tID  shift, and go to state 74


State 46

    2 Main: tVOID tMAIN tPO tPF tAO Body tAF .

    $default  reduce using rule 2 (Main)


State 47

   30 Instructions: Instruction Instructions .

    $default  reduce using rule 30 (Instructions)


State 48

   39 Instruction: ifCondition tAO . $@11 Body tAF $@12 elseCondition

    $default  reduce using rule 37 ($@11)

    $@11  go to state 75


State 49

   41 Instruction: whileCondition tAO . $@13 Body tAF

    $default  reduce using rule 40 ($@13)

    $@13  go to state 76


State 50

   17 DecArgs: tINT tID . $@9 NextDecArg

    $default  reduce using rule 16 ($@9)

    $@9  go to state 77


State 51

   13 Function: tVOID tID tPO $@5 DecArgs $@6 . tPF tAO $@7 Body tAF

    tPF  shift, and go to state 78


State 52

    9 Function: tINT tID tPO $@1 DecArgs $@2 . tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

    tPF  shift, and go to state 79


State 53

   69 ifBoolExpression: tTRUE .

    $default  reduce using rule 69 (ifBoolExpression)


State 54

   70 ifBoolExpression: tFALSE .

    $default  reduce using rule 70 (ifBoolExpression)


State 55

   55 Operand: tNB .

    $default  reduce using rule 55 (Operand)


State 56

   15 FunCall: tID . tPO $@8 CallArgs tPF
   54 Operand: tID .
   68 ifBoolExpression: tID .

    tPO  shift, and go to state 42

    tPF       reduce using rule 68 (ifBoolExpression)
    $default  reduce using rule 54 (Operand)


State 57

   52 Operand: FunCall .

    $default  reduce using rule 52 (Operand)


State 58

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   71 ifComparaison: Operand . tEQEQ Operand
   72              | Operand . tINF Operand
   73              | Operand . tSUP Operand

    tSUB   shift, and go to state 80
    tADD   shift, and go to state 81
    tMUL   shift, and go to state 82
    tDIV   shift, and go to state 83
    tINF   shift, and go to state 84
    tSUP   shift, and go to state 85
    tEQEQ  shift, and go to state 86


State 59

   53 Operand: Operations .

    $default  reduce using rule 53 (Operand)


State 60

   62 ifCondition: tIF tPO ifBoolExpression . tPF $@16 elseCondition

    tPF  shift, and go to state 87


State 61

   67 ifBoolExpression: ifComparaison .

    $default  reduce using rule 67 (ifBoolExpression)


State 62

   76 whileBoolExpression: tTRUE .

    $default  reduce using rule 76 (whileBoolExpression)


State 63

   77 whileBoolExpression: tFALSE .

    $default  reduce using rule 77 (whileBoolExpression)


State 64

   15 FunCall: tID . tPO $@8 CallArgs tPF
   54 Operand: tID .
   75 whileBoolExpression: tID .

    tPO  shift, and go to state 42

    tPF       reduce using rule 75 (whileBoolExpression)
    $default  reduce using rule 54 (Operand)


State 65

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   78 whileComparaison: Operand . tEQEQ Operand
   79                 | Operand . tINF Operand
   80                 | Operand . tSUP Operand

    tSUB   shift, and go to state 80
    tADD   shift, and go to state 81
    tMUL   shift, and go to state 82
    tDIV   shift, and go to state 83
    tINF   shift, and go to state 88
    tSUP   shift, and go to state 89
    tEQEQ  shift, and go to state 90


State 66

   66 whileCondition: tWHILE tPO whileBoolExpression . tPF

    tPF  shift, and go to state 91


State 67

   74 whileBoolExpression: whileComparaison .

    $default  reduce using rule 74 (whileBoolExpression)


State 68

   44 PrintArg: tNB .

    $default  reduce using rule 44 (PrintArg)


State 69

   43 PrintArg: tID .

    $default  reduce using rule 43 (PrintArg)


State 70

   42 Print: tPRINT tPO PrintArg . tPF tPV

    tPF  shift, and go to state 92


State 71

   15 FunCall: tID tPO $@8 . CallArgs tPF

    tNB  shift, and go to state 93
    tID  shift, and go to state 94

    $default  reduce using rule 24 (CallArgs)

    CallArgs  go to state 95


State 72

   15 FunCall: tID . tPO $@8 CallArgs tPF
   54 Operand: tID .

    tPO  shift, and go to state 42

    $default  reduce using rule 54 (Operand)


State 73

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   60 VarAssign: tID tEQUAL Operand . tPV

    tPV   shift, and go to state 96
    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83


State 74

   45 VarDeclarationAndAssign: Type tINT tID . tEQUAL tNB tPV
   46                        | Type tINT tID . tEQUAL tID tPV
   48 VarDeclaration: Type tINT tID . $@14 NextVar

    tEQUAL  shift, and go to state 97

    $default  reduce using rule 47 ($@14)

    $@14  go to state 98


State 75

   39 Instruction: ifCondition tAO $@11 . Body tAF $@12 elseCondition

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 31 (Instructions)
    $default  reduce using rule 28 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 99
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 76

   41 Instruction: whileCondition tAO $@13 . Body tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 31 (Instructions)
    $default  reduce using rule 28 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 100
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 77

   17 DecArgs: tINT tID $@9 . NextDecArg

    tV  shift, and go to state 101

    $default  reduce using rule 20 (NextDecArg)

    NextDecArg  go to state 102


State 78

   13 Function: tVOID tID tPO $@5 DecArgs $@6 tPF . tAO $@7 Body tAF

    tAO  shift, and go to state 103


State 79

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF . tAO $@3 Body tRETURN tID tPV $@4 tAF

    tAO  shift, and go to state 104


State 80

   57 Operations: Operand tSUB . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 72

    FunCall     go to state 57
    Operand     go to state 105
    Operations  go to state 59


State 81

   56 Operations: Operand tADD . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 72

    FunCall     go to state 57
    Operand     go to state 106
    Operations  go to state 59


State 82

   58 Operations: Operand tMUL . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 72

    FunCall     go to state 57
    Operand     go to state 107
    Operations  go to state 59


State 83

   59 Operations: Operand tDIV . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 72

    FunCall     go to state 57
    Operand     go to state 108
    Operations  go to state 59


State 84

   72 ifComparaison: Operand tINF . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 72

    FunCall     go to state 57
    Operand     go to state 109
    Operations  go to state 59


State 85

   73 ifComparaison: Operand tSUP . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 72

    FunCall     go to state 57
    Operand     go to state 110
    Operations  go to state 59


State 86

   71 ifComparaison: Operand tEQEQ . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 72

    FunCall     go to state 57
    Operand     go to state 111
    Operations  go to state 59


State 87

   62 ifCondition: tIF tPO ifBoolExpression tPF . $@16 elseCondition

    $default  reduce using rule 61 ($@16)

    $@16  go to state 112


State 88

   79 whileComparaison: Operand tINF . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 72

    FunCall     go to state 57
    Operand     go to state 113
    Operations  go to state 59


State 89

   80 whileComparaison: Operand tSUP . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 72

    FunCall     go to state 57
    Operand     go to state 114
    Operations  go to state 59


State 90

   78 whileComparaison: Operand tEQEQ . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 72

    FunCall     go to state 57
    Operand     go to state 115
    Operations  go to state 59


State 91

   66 whileCondition: tWHILE tPO whileBoolExpression tPF .

    $default  reduce using rule 66 (whileCondition)


State 92

   42 Print: tPRINT tPO PrintArg tPF . tPV

    tPV  shift, and go to state 116


State 93

   23 CallArgs: tNB . CallArgNext

    tV  shift, and go to state 117

    $default  reduce using rule 26 (CallArgNext)

    CallArgNext  go to state 118


State 94

   22 CallArgs: tID . $@10 CallArgNext

    $default  reduce using rule 21 ($@10)

    $@10  go to state 119


State 95

   15 FunCall: tID tPO $@8 CallArgs . tPF

    tPF  shift, and go to state 120


State 96

   60 VarAssign: tID tEQUAL Operand tPV .

    $default  reduce using rule 60 (VarAssign)


State 97

   45 VarDeclarationAndAssign: Type tINT tID tEQUAL . tNB tPV
   46                        | Type tINT tID tEQUAL . tID tPV

    tNB  shift, and go to state 121
    tID  shift, and go to state 122


State 98

   48 VarDeclaration: Type tINT tID $@14 . NextVar

    tPV     shift, and go to state 123
    tCONST  shift, and go to state 23

    $default  reduce using rule 28 (Type)

    Type     go to state 124
    NextVar  go to state 125


State 99

   39 Instruction: ifCondition tAO $@11 Body . tAF $@12 elseCondition

    tAF  shift, and go to state 126


State 100

   41 Instruction: whileCondition tAO $@13 Body . tAF

    tAF  shift, and go to state 127


State 101

   19 NextDecArg: tV . DecArgs

    tINT  shift, and go to state 36

    $default  reduce using rule 18 (DecArgs)

    DecArgs  go to state 128


State 102

   17 DecArgs: tINT tID $@9 NextDecArg .

    $default  reduce using rule 17 (DecArgs)


State 103

   13 Function: tVOID tID tPO $@5 DecArgs $@6 tPF tAO . $@7 Body tAF

    $default  reduce using rule 12 ($@7)

    $@7  go to state 129


State 104

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO . $@3 Body tRETURN tID tPV $@4 tAF

    $default  reduce using rule 7 ($@3)

    $@3  go to state 130


State 105

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   57           | Operand tSUB Operand .
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand

    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 57 (Operations)


State 106

   56 Operations: Operand . tADD Operand
   56           | Operand tADD Operand .
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand

    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 56 (Operations)


State 107

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   58           | Operand tMUL Operand .
   59           | Operand . tDIV Operand

    $default  reduce using rule 58 (Operations)


State 108

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   59           | Operand tDIV Operand .

    $default  reduce using rule 59 (Operations)


State 109

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   72 ifComparaison: Operand tINF Operand .

    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 72 (ifComparaison)


State 110

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   73 ifComparaison: Operand tSUP Operand .

    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 73 (ifComparaison)


State 111

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   71 ifComparaison: Operand tEQEQ Operand .

    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 71 (ifComparaison)


State 112

   62 ifCondition: tIF tPO ifBoolExpression tPF $@16 . elseCondition

    tELSE  shift, and go to state 131

    $default  reduce using rule 65 (elseCondition)

    elseCondition  go to state 132


State 113

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   79 whileComparaison: Operand tINF Operand .

    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 79 (whileComparaison)


State 114

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   80 whileComparaison: Operand tSUP Operand .

    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 80 (whileComparaison)


State 115

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   78 whileComparaison: Operand tEQEQ Operand .

    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 78 (whileComparaison)


State 116

   42 Print: tPRINT tPO PrintArg tPF tPV .

    $default  reduce using rule 42 (Print)


State 117

   25 CallArgNext: tV . CallArgs

    tNB  shift, and go to state 93
    tID  shift, and go to state 94

    $default  reduce using rule 24 (CallArgs)

    CallArgs  go to state 133


State 118

   23 CallArgs: tNB CallArgNext .

    $default  reduce using rule 23 (CallArgs)


State 119

   22 CallArgs: tID $@10 . CallArgNext

    tV  shift, and go to state 117

    $default  reduce using rule 26 (CallArgNext)

    CallArgNext  go to state 134


State 120

   15 FunCall: tID tPO $@8 CallArgs tPF .

    $default  reduce using rule 15 (FunCall)


State 121

   45 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB . tPV

    tPV  shift, and go to state 135


State 122

   46 VarDeclarationAndAssign: Type tINT tID tEQUAL tID . tPV

    tPV  shift, and go to state 136


State 123

   51 NextVar: tPV .

    $default  reduce using rule 51 (NextVar)


State 124

   50 NextVar: Type . tV tID $@15 NextVar

    tV  shift, and go to state 137


State 125

   48 VarDeclaration: Type tINT tID $@14 NextVar .

    $default  reduce using rule 48 (VarDeclaration)


State 126

   39 Instruction: ifCondition tAO $@11 Body tAF . $@12 elseCondition

    $default  reduce using rule 38 ($@12)

    $@12  go to state 138


State 127

   41 Instruction: whileCondition tAO $@13 Body tAF .

    $default  reduce using rule 41 (Instruction)


State 128

   19 NextDecArg: tV DecArgs .

    $default  reduce using rule 19 (NextDecArg)


State 129

   13 Function: tVOID tID tPO $@5 DecArgs $@6 tPF tAO $@7 . Body tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 31 (Instructions)
    $default  reduce using rule 28 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 139
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 130

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 . Body tRETURN tID tPV $@4 tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tRETURN   reduce using rule 31 (Instructions)
    $default  reduce using rule 28 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 140
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 131

   64 elseCondition: tELSE . tAO $@17 Body tAF

    tAO  shift, and go to state 141


State 132

   62 ifCondition: tIF tPO ifBoolExpression tPF $@16 elseCondition .

    $default  reduce using rule 62 (ifCondition)


State 133

   25 CallArgNext: tV CallArgs .

    $default  reduce using rule 25 (CallArgNext)


State 134

   22 CallArgs: tID $@10 CallArgNext .

    $default  reduce using rule 22 (CallArgs)


State 135

   45 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV .

    $default  reduce using rule 45 (VarDeclarationAndAssign)


State 136

   46 VarDeclarationAndAssign: Type tINT tID tEQUAL tID tPV .

    $default  reduce using rule 46 (VarDeclarationAndAssign)


State 137

   50 NextVar: Type tV . tID $@15 NextVar

    tID  shift, and go to state 142


State 138

   39 Instruction: ifCondition tAO $@11 Body tAF $@12 . elseCondition

    tELSE  shift, and go to state 131

    $default  reduce using rule 65 (elseCondition)

    elseCondition  go to state 143


State 139

   13 Function: tVOID tID tPO $@5 DecArgs $@6 tPF tAO $@7 Body . tAF

    tAF  shift, and go to state 144


State 140

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body . tRETURN tID tPV $@4 tAF

    tRETURN  shift, and go to state 145


State 141

   64 elseCondition: tELSE tAO . $@17 Body tAF

    $default  reduce using rule 63 ($@17)

    $@17  go to state 146


State 142

   50 NextVar: Type tV tID . $@15 NextVar

    $default  reduce using rule 49 ($@15)

    $@15  go to state 147


State 143

   39 Instruction: ifCondition tAO $@11 Body tAF $@12 elseCondition .

    $default  reduce using rule 39 (Instruction)


State 144

   13 Function: tVOID tID tPO $@5 DecArgs $@6 tPF tAO $@7 Body tAF .

    $default  reduce using rule 13 (Function)


State 145

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN . tID tPV $@4 tAF

    tID  shift, and go to state 148


State 146

   64 elseCondition: tELSE tAO $@17 . Body tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 31 (Instructions)
    $default  reduce using rule 28 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 149
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 147

   50 NextVar: Type tV tID $@15 . NextVar

    tPV     shift, and go to state 123
    tCONST  shift, and go to state 23

    $default  reduce using rule 28 (Type)

    Type     go to state 124
    NextVar  go to state 150


State 148

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID . tPV $@4 tAF

    tPV  shift, and go to state 151


State 149

   64 elseCondition: tELSE tAO $@17 Body . tAF

    tAF  shift, and go to state 152


State 150

   50 NextVar: Type tV tID $@15 NextVar .

    $default  reduce using rule 50 (NextVar)


State 151

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV . $@4 tAF

    $default  reduce using rule 8 ($@4)

    $@4  go to state 153


State 152

   64 elseCondition: tELSE tAO $@17 Body tAF .

    $default  reduce using rule 64 (elseCondition)


State 153

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 . tAF

    tAF  shift, and go to state 154


State 154

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF .

    $default  reduce using rule 9 (Function)
