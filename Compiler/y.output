Nonterminals useless in grammar

    Comparator


Terminals unused in grammar

    tSTRING


Rules useless in grammar

   76 Comparator: tINF
   77           | tSUP
   78           | tEQEQ


Rules useless in parser due to conflicts

   40 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV


State 132 conflicts: 8 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: Main Functions

    2 Main: tVOID tMAIN tPO tPF tAO Body tAF

    3 Functions: Function
    4          | Function Functions

    5 $@1: %empty

    6 Function: tINT tID tPO DecArgs tPF tAO $@1 Body Return tAF

    7 $@2: %empty

    8 Function: tVOID tID tPO DecArgs tPF tAO $@2 Body tAF

    9 Return: tRETURN tID tPV
   10       | %empty

   11 FunCall: tID tPO CallArgs tPF tPV

   12 DecArgs: tINT tID NextDecArg
   13        | %empty

   14 NextDecArg: tV DecArgs
   15           | %empty

   16 CallArgs: Operand CallArgNext
   17         | %empty

   18 CallArgNext: tV CallArgs
   19            | %empty

   20 Type: tCONST
   21     | %empty

   22 Body: Instructions

   23 Instructions: Instruction Instructions
   24             | %empty

   25 Instruction: FunCall
   26            | Print
   27            | ConstDeclarationAndAssign
   28            | VarDeclarationAndAssign
   29            | VarDeclaration
   30            | VarAssign

   31 $@3: %empty

   32 $@4: %empty

   33 Instruction: ifCondition tAO $@3 Body tAF $@4 elseCondition

   34 $@5: %empty

   35 Instruction: whileCondition tAO $@5 Body tAF

   36 Print: tPRINT tPO PrintArg tPF tPV

   37 PrintArg: tID
   38         | tNB

   39 ConstDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV

   40 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV
   41                        | Type tINT tID tEQUAL tID tPV

   42 $@6: %empty

   43 VarDeclaration: Type tINT tID $@6 NextVar

   44 $@7: %empty

   45 NextVar: Type tV tID $@7 NextVar
   46        | tPV

   47 Operand: FunCall
   48        | Operations
   49        | tID
   50        | tNB

   51 Operations: Operand tADD Operand
   52           | Operand tSUB Operand
   53           | Operand tMUL Operand
   54           | Operand tDIV Operand

   55 VarAssign: tID tEQUAL Operand tPV

   56 $@8: %empty

   57 ifCondition: tIF tPO ifBoolExpression tPF $@8 elseCondition

   58 $@9: %empty

   59 elseCondition: tELSE tAO $@9 Body tAF
   60              | %empty

   61 whileCondition: tWHILE tPO whileBoolExpression tPF

   62 ifBoolExpression: ifComparaison
   63                 | tID
   64                 | tTRUE
   65                 | tFALSE

   66 ifComparaison: Operand tEQEQ Operand
   67              | Operand tINF Operand
   68              | Operand tSUP Operand

   69 whileBoolExpression: whileComparaison
   70                    | tID
   71                    | tTRUE
   72                    | tFALSE

   73 whileComparaison: Operand tEQEQ Operand
   74                 | Operand tINF Operand
   75                 | Operand tSUP Operand


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tMAIN (258) 2
    tRETURN (259) 9
    tIF (260) 57
    tWHILE (261) 61
    tPRINT (262) 36
    tELSE (263) 59
    tAO (264) 2 6 8 33 35 59
    tAF (265) 2 6 8 33 35 59
    tPO (266) 2 6 8 11 36 57 61
    tPF (267) 2 6 8 11 36 57 61
    tV (268) 14 18 45
    tPV (269) 9 11 36 39 40 41 46 55
    tEQUAL (270) 39 40 41 55
    tVOID (271) 2 8
    tINT (272) 6 12 39 40 41 43
    tSTRING (273)
    tSUB (274) 52
    tADD (275) 51
    tMUL (276) 53
    tDIV (277) 54
    tINF (278) 67 74
    tSUP (279) 68 75
    tEQEQ (280) 66 73
    tTRUE (281) 64 71
    tFALSE (282) 65 72
    tCONST (283) 20
    tNB <nb> (284) 38 39 40 50
    tID <string> (285) 6 8 9 11 12 37 39 40 41 43 45 49 55 63 70


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    Program (32)
        on left: 1
        on right: 0
    Main (33)
        on left: 2
        on right: 1
    Functions (34)
        on left: 3 4
        on right: 1 4
    Function (35)
        on left: 6 8
        on right: 3 4
    $@1 (36)
        on left: 5
        on right: 6
    $@2 (37)
        on left: 7
        on right: 8
    Return (38)
        on left: 9 10
        on right: 6
    FunCall (39)
        on left: 11
        on right: 25 47
    DecArgs (40)
        on left: 12 13
        on right: 6 8 14
    NextDecArg (41)
        on left: 14 15
        on right: 12
    CallArgs (42)
        on left: 16 17
        on right: 11 18
    CallArgNext (43)
        on left: 18 19
        on right: 16
    Type <nb> (44)
        on left: 20 21
        on right: 39 40 41 43 45
    Body (45)
        on left: 22
        on right: 2 6 8 33 35 59
    Instructions (46)
        on left: 23 24
        on right: 22 23
    Instruction (47)
        on left: 25 26 27 28 29 30 33 35
        on right: 23
    $@3 (48)
        on left: 31
        on right: 33
    $@4 (49)
        on left: 32
        on right: 33
    $@5 (50)
        on left: 34
        on right: 35
    Print (51)
        on left: 36
        on right: 26
    PrintArg (52)
        on left: 37 38
        on right: 36
    ConstDeclarationAndAssign (53)
        on left: 39
        on right: 27
    VarDeclarationAndAssign (54)
        on left: 40 41
        on right: 28
    VarDeclaration (55)
        on left: 43
        on right: 29
    $@6 (56)
        on left: 42
        on right: 43
    NextVar (57)
        on left: 45 46
        on right: 43 45
    $@7 (58)
        on left: 44
        on right: 45
    Operand (59)
        on left: 47 48 49 50
        on right: 16 51 52 53 54 55 66 67 68 73 74 75
    Operations (60)
        on left: 51 52 53 54
        on right: 48
    VarAssign (61)
        on left: 55
        on right: 30
    ifCondition (62)
        on left: 57
        on right: 33
    $@8 (63)
        on left: 56
        on right: 57
    elseCondition (64)
        on left: 59 60
        on right: 33 57
    $@9 (65)
        on left: 58
        on right: 59
    whileCondition (66)
        on left: 61
        on right: 35
    ifBoolExpression (67)
        on left: 62 63 64 65
        on right: 57
    ifComparaison (68)
        on left: 66 67 68
        on right: 62
    whileBoolExpression (69)
        on left: 69 70 71 72
        on right: 61
    whileComparaison (70)
        on left: 73 74 75
        on right: 69


State 0

    0 $accept: . Program $end

    tVOID  shift, and go to state 1

    Program  go to state 2
    Main     go to state 3


State 1

    2 Main: tVOID . tMAIN tPO tPF tAO Body tAF

    tMAIN  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: Main . Functions

    tVOID  shift, and go to state 6
    tINT   shift, and go to state 7

    Functions  go to state 8
    Function   go to state 9


State 4

    2 Main: tVOID tMAIN . tPO tPF tAO Body tAF

    tPO  shift, and go to state 10


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    8 Function: tVOID . tID tPO DecArgs tPF tAO $@2 Body tAF

    tID  shift, and go to state 11


State 7

    6 Function: tINT . tID tPO DecArgs tPF tAO $@1 Body Return tAF

    tID  shift, and go to state 12


State 8

    1 Program: Main Functions .

    $default  reduce using rule 1 (Program)


State 9

    3 Functions: Function .
    4          | Function . Functions

    tVOID  shift, and go to state 6
    tINT   shift, and go to state 7

    $default  reduce using rule 3 (Functions)

    Functions  go to state 13
    Function   go to state 9


State 10

    2 Main: tVOID tMAIN tPO . tPF tAO Body tAF

    tPF  shift, and go to state 14


State 11

    8 Function: tVOID tID . tPO DecArgs tPF tAO $@2 Body tAF

    tPO  shift, and go to state 15


State 12

    6 Function: tINT tID . tPO DecArgs tPF tAO $@1 Body Return tAF

    tPO  shift, and go to state 16


State 13

    4 Functions: Function Functions .

    $default  reduce using rule 4 (Functions)


State 14

    2 Main: tVOID tMAIN tPO tPF . tAO Body tAF

    tAO  shift, and go to state 17


State 15

    8 Function: tVOID tID tPO . DecArgs tPF tAO $@2 Body tAF

    tINT  shift, and go to state 18

    $default  reduce using rule 13 (DecArgs)

    DecArgs  go to state 19


State 16

    6 Function: tINT tID tPO . DecArgs tPF tAO $@1 Body Return tAF

    tINT  shift, and go to state 18

    $default  reduce using rule 13 (DecArgs)

    DecArgs  go to state 20


State 17

    2 Main: tVOID tMAIN tPO tPF tAO . Body tAF

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tAF       reduce using rule 24 (Instructions)
    $default  reduce using rule 21 (Type)

    FunCall                    go to state 26
    Type                       go to state 27
    Body                       go to state 28
    Instructions               go to state 29
    Instruction                go to state 30
    Print                      go to state 31
    ConstDeclarationAndAssign  go to state 32
    VarDeclarationAndAssign    go to state 33
    VarDeclaration             go to state 34
    VarAssign                  go to state 35
    ifCondition                go to state 36
    whileCondition             go to state 37


State 18

   12 DecArgs: tINT . tID NextDecArg

    tID  shift, and go to state 38


State 19

    8 Function: tVOID tID tPO DecArgs . tPF tAO $@2 Body tAF

    tPF  shift, and go to state 39


State 20

    6 Function: tINT tID tPO DecArgs . tPF tAO $@1 Body Return tAF

    tPF  shift, and go to state 40


State 21

   57 ifCondition: tIF . tPO ifBoolExpression tPF $@8 elseCondition

    tPO  shift, and go to state 41


State 22

   61 whileCondition: tWHILE . tPO whileBoolExpression tPF

    tPO  shift, and go to state 42


State 23

   36 Print: tPRINT . tPO PrintArg tPF tPV

    tPO  shift, and go to state 43


State 24

   20 Type: tCONST .

    $default  reduce using rule 20 (Type)


State 25

   11 FunCall: tID . tPO CallArgs tPF tPV
   55 VarAssign: tID . tEQUAL Operand tPV

    tPO     shift, and go to state 44
    tEQUAL  shift, and go to state 45


State 26

   25 Instruction: FunCall .

    $default  reduce using rule 25 (Instruction)


State 27

   39 ConstDeclarationAndAssign: Type . tINT tID tEQUAL tNB tPV
   40 VarDeclarationAndAssign: Type . tINT tID tEQUAL tNB tPV
   41                        | Type . tINT tID tEQUAL tID tPV
   43 VarDeclaration: Type . tINT tID $@6 NextVar

    tINT  shift, and go to state 46


State 28

    2 Main: tVOID tMAIN tPO tPF tAO Body . tAF

    tAF  shift, and go to state 47


State 29

   22 Body: Instructions .

    $default  reduce using rule 22 (Body)


State 30

   23 Instructions: Instruction . Instructions

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tINT      reduce using rule 21 (Type)
    $default  reduce using rule 24 (Instructions)

    FunCall                    go to state 26
    Type                       go to state 27
    Instructions               go to state 48
    Instruction                go to state 30
    Print                      go to state 31
    ConstDeclarationAndAssign  go to state 32
    VarDeclarationAndAssign    go to state 33
    VarDeclaration             go to state 34
    VarAssign                  go to state 35
    ifCondition                go to state 36
    whileCondition             go to state 37


State 31

   26 Instruction: Print .

    $default  reduce using rule 26 (Instruction)


State 32

   27 Instruction: ConstDeclarationAndAssign .

    $default  reduce using rule 27 (Instruction)


State 33

   28 Instruction: VarDeclarationAndAssign .

    $default  reduce using rule 28 (Instruction)


State 34

   29 Instruction: VarDeclaration .

    $default  reduce using rule 29 (Instruction)


State 35

   30 Instruction: VarAssign .

    $default  reduce using rule 30 (Instruction)


State 36

   33 Instruction: ifCondition . tAO $@3 Body tAF $@4 elseCondition

    tAO  shift, and go to state 49


State 37

   35 Instruction: whileCondition . tAO $@5 Body tAF

    tAO  shift, and go to state 50


State 38

   12 DecArgs: tINT tID . NextDecArg

    tV  shift, and go to state 51

    $default  reduce using rule 15 (NextDecArg)

    NextDecArg  go to state 52


State 39

    8 Function: tVOID tID tPO DecArgs tPF . tAO $@2 Body tAF

    tAO  shift, and go to state 53


State 40

    6 Function: tINT tID tPO DecArgs tPF . tAO $@1 Body Return tAF

    tAO  shift, and go to state 54


State 41

   57 ifCondition: tIF tPO . ifBoolExpression tPF $@8 elseCondition

    tTRUE   shift, and go to state 55
    tFALSE  shift, and go to state 56
    tNB     shift, and go to state 57
    tID     shift, and go to state 58

    FunCall           go to state 59
    Operand           go to state 60
    Operations        go to state 61
    ifBoolExpression  go to state 62
    ifComparaison     go to state 63


State 42

   61 whileCondition: tWHILE tPO . whileBoolExpression tPF

    tTRUE   shift, and go to state 64
    tFALSE  shift, and go to state 65
    tNB     shift, and go to state 57
    tID     shift, and go to state 66

    FunCall              go to state 59
    Operand              go to state 67
    Operations           go to state 61
    whileBoolExpression  go to state 68
    whileComparaison     go to state 69


State 43

   36 Print: tPRINT tPO . PrintArg tPF tPV

    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    PrintArg  go to state 72


State 44

   11 FunCall: tID tPO . CallArgs tPF tPV

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    $default  reduce using rule 17 (CallArgs)

    FunCall     go to state 59
    CallArgs    go to state 74
    Operand     go to state 75
    Operations  go to state 61


State 45

   55 VarAssign: tID tEQUAL . Operand tPV

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    FunCall     go to state 59
    Operand     go to state 76
    Operations  go to state 61


State 46

   39 ConstDeclarationAndAssign: Type tINT . tID tEQUAL tNB tPV
   40 VarDeclarationAndAssign: Type tINT . tID tEQUAL tNB tPV
   41                        | Type tINT . tID tEQUAL tID tPV
   43 VarDeclaration: Type tINT . tID $@6 NextVar

    tID  shift, and go to state 77


State 47

    2 Main: tVOID tMAIN tPO tPF tAO Body tAF .

    $default  reduce using rule 2 (Main)


State 48

   23 Instructions: Instruction Instructions .

    $default  reduce using rule 23 (Instructions)


State 49

   33 Instruction: ifCondition tAO . $@3 Body tAF $@4 elseCondition

    $default  reduce using rule 31 ($@3)

    $@3  go to state 78


State 50

   35 Instruction: whileCondition tAO . $@5 Body tAF

    $default  reduce using rule 34 ($@5)

    $@5  go to state 79


State 51

   14 NextDecArg: tV . DecArgs

    tINT  shift, and go to state 18

    $default  reduce using rule 13 (DecArgs)

    DecArgs  go to state 80


State 52

   12 DecArgs: tINT tID NextDecArg .

    $default  reduce using rule 12 (DecArgs)


State 53

    8 Function: tVOID tID tPO DecArgs tPF tAO . $@2 Body tAF

    $default  reduce using rule 7 ($@2)

    $@2  go to state 81


State 54

    6 Function: tINT tID tPO DecArgs tPF tAO . $@1 Body Return tAF

    $default  reduce using rule 5 ($@1)

    $@1  go to state 82


State 55

   64 ifBoolExpression: tTRUE .

    $default  reduce using rule 64 (ifBoolExpression)


State 56

   65 ifBoolExpression: tFALSE .

    $default  reduce using rule 65 (ifBoolExpression)


State 57

   50 Operand: tNB .

    $default  reduce using rule 50 (Operand)


State 58

   11 FunCall: tID . tPO CallArgs tPF tPV
   49 Operand: tID .
   63 ifBoolExpression: tID .

    tPO  shift, and go to state 44

    tPF       reduce using rule 63 (ifBoolExpression)
    $default  reduce using rule 49 (Operand)


State 59

   47 Operand: FunCall .

    $default  reduce using rule 47 (Operand)


State 60

   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand
   66 ifComparaison: Operand . tEQEQ Operand
   67              | Operand . tINF Operand
   68              | Operand . tSUP Operand

    tSUB   shift, and go to state 83
    tADD   shift, and go to state 84
    tMUL   shift, and go to state 85
    tDIV   shift, and go to state 86
    tINF   shift, and go to state 87
    tSUP   shift, and go to state 88
    tEQEQ  shift, and go to state 89


State 61

   48 Operand: Operations .

    $default  reduce using rule 48 (Operand)


State 62

   57 ifCondition: tIF tPO ifBoolExpression . tPF $@8 elseCondition

    tPF  shift, and go to state 90


State 63

   62 ifBoolExpression: ifComparaison .

    $default  reduce using rule 62 (ifBoolExpression)


State 64

   71 whileBoolExpression: tTRUE .

    $default  reduce using rule 71 (whileBoolExpression)


State 65

   72 whileBoolExpression: tFALSE .

    $default  reduce using rule 72 (whileBoolExpression)


State 66

   11 FunCall: tID . tPO CallArgs tPF tPV
   49 Operand: tID .
   70 whileBoolExpression: tID .

    tPO  shift, and go to state 44

    tPF       reduce using rule 70 (whileBoolExpression)
    $default  reduce using rule 49 (Operand)


State 67

   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand
   73 whileComparaison: Operand . tEQEQ Operand
   74                 | Operand . tINF Operand
   75                 | Operand . tSUP Operand

    tSUB   shift, and go to state 83
    tADD   shift, and go to state 84
    tMUL   shift, and go to state 85
    tDIV   shift, and go to state 86
    tINF   shift, and go to state 91
    tSUP   shift, and go to state 92
    tEQEQ  shift, and go to state 93


State 68

   61 whileCondition: tWHILE tPO whileBoolExpression . tPF

    tPF  shift, and go to state 94


State 69

   69 whileBoolExpression: whileComparaison .

    $default  reduce using rule 69 (whileBoolExpression)


State 70

   38 PrintArg: tNB .

    $default  reduce using rule 38 (PrintArg)


State 71

   37 PrintArg: tID .

    $default  reduce using rule 37 (PrintArg)


State 72

   36 Print: tPRINT tPO PrintArg . tPF tPV

    tPF  shift, and go to state 95


State 73

   11 FunCall: tID . tPO CallArgs tPF tPV
   49 Operand: tID .

    tPO  shift, and go to state 44

    $default  reduce using rule 49 (Operand)


State 74

   11 FunCall: tID tPO CallArgs . tPF tPV

    tPF  shift, and go to state 96


State 75

   16 CallArgs: Operand . CallArgNext
   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand

    tV    shift, and go to state 97
    tSUB  shift, and go to state 83
    tADD  shift, and go to state 84
    tMUL  shift, and go to state 85
    tDIV  shift, and go to state 86

    $default  reduce using rule 19 (CallArgNext)

    CallArgNext  go to state 98


State 76

   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand
   55 VarAssign: tID tEQUAL Operand . tPV

    tPV   shift, and go to state 99
    tSUB  shift, and go to state 83
    tADD  shift, and go to state 84
    tMUL  shift, and go to state 85
    tDIV  shift, and go to state 86


State 77

   39 ConstDeclarationAndAssign: Type tINT tID . tEQUAL tNB tPV
   40 VarDeclarationAndAssign: Type tINT tID . tEQUAL tNB tPV
   41                        | Type tINT tID . tEQUAL tID tPV
   43 VarDeclaration: Type tINT tID . $@6 NextVar

    tEQUAL  shift, and go to state 100

    $default  reduce using rule 42 ($@6)

    $@6  go to state 101


State 78

   33 Instruction: ifCondition tAO $@3 . Body tAF $@4 elseCondition

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tAF       reduce using rule 24 (Instructions)
    $default  reduce using rule 21 (Type)

    FunCall                    go to state 26
    Type                       go to state 27
    Body                       go to state 102
    Instructions               go to state 29
    Instruction                go to state 30
    Print                      go to state 31
    ConstDeclarationAndAssign  go to state 32
    VarDeclarationAndAssign    go to state 33
    VarDeclaration             go to state 34
    VarAssign                  go to state 35
    ifCondition                go to state 36
    whileCondition             go to state 37


State 79

   35 Instruction: whileCondition tAO $@5 . Body tAF

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tAF       reduce using rule 24 (Instructions)
    $default  reduce using rule 21 (Type)

    FunCall                    go to state 26
    Type                       go to state 27
    Body                       go to state 103
    Instructions               go to state 29
    Instruction                go to state 30
    Print                      go to state 31
    ConstDeclarationAndAssign  go to state 32
    VarDeclarationAndAssign    go to state 33
    VarDeclaration             go to state 34
    VarAssign                  go to state 35
    ifCondition                go to state 36
    whileCondition             go to state 37


State 80

   14 NextDecArg: tV DecArgs .

    $default  reduce using rule 14 (NextDecArg)


State 81

    8 Function: tVOID tID tPO DecArgs tPF tAO $@2 . Body tAF

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tAF       reduce using rule 24 (Instructions)
    $default  reduce using rule 21 (Type)

    FunCall                    go to state 26
    Type                       go to state 27
    Body                       go to state 104
    Instructions               go to state 29
    Instruction                go to state 30
    Print                      go to state 31
    ConstDeclarationAndAssign  go to state 32
    VarDeclarationAndAssign    go to state 33
    VarDeclaration             go to state 34
    VarAssign                  go to state 35
    ifCondition                go to state 36
    whileCondition             go to state 37


State 82

    6 Function: tINT tID tPO DecArgs tPF tAO $@1 . Body Return tAF

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tINT      reduce using rule 21 (Type)
    $default  reduce using rule 24 (Instructions)

    FunCall                    go to state 26
    Type                       go to state 27
    Body                       go to state 105
    Instructions               go to state 29
    Instruction                go to state 30
    Print                      go to state 31
    ConstDeclarationAndAssign  go to state 32
    VarDeclarationAndAssign    go to state 33
    VarDeclaration             go to state 34
    VarAssign                  go to state 35
    ifCondition                go to state 36
    whileCondition             go to state 37


State 83

   52 Operations: Operand tSUB . Operand

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    FunCall     go to state 59
    Operand     go to state 106
    Operations  go to state 61


State 84

   51 Operations: Operand tADD . Operand

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    FunCall     go to state 59
    Operand     go to state 107
    Operations  go to state 61


State 85

   53 Operations: Operand tMUL . Operand

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    FunCall     go to state 59
    Operand     go to state 108
    Operations  go to state 61


State 86

   54 Operations: Operand tDIV . Operand

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    FunCall     go to state 59
    Operand     go to state 109
    Operations  go to state 61


State 87

   67 ifComparaison: Operand tINF . Operand

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    FunCall     go to state 59
    Operand     go to state 110
    Operations  go to state 61


State 88

   68 ifComparaison: Operand tSUP . Operand

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    FunCall     go to state 59
    Operand     go to state 111
    Operations  go to state 61


State 89

   66 ifComparaison: Operand tEQEQ . Operand

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    FunCall     go to state 59
    Operand     go to state 112
    Operations  go to state 61


State 90

   57 ifCondition: tIF tPO ifBoolExpression tPF . $@8 elseCondition

    $default  reduce using rule 56 ($@8)

    $@8  go to state 113


State 91

   74 whileComparaison: Operand tINF . Operand

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    FunCall     go to state 59
    Operand     go to state 114
    Operations  go to state 61


State 92

   75 whileComparaison: Operand tSUP . Operand

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    FunCall     go to state 59
    Operand     go to state 115
    Operations  go to state 61


State 93

   73 whileComparaison: Operand tEQEQ . Operand

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    FunCall     go to state 59
    Operand     go to state 116
    Operations  go to state 61


State 94

   61 whileCondition: tWHILE tPO whileBoolExpression tPF .

    $default  reduce using rule 61 (whileCondition)


State 95

   36 Print: tPRINT tPO PrintArg tPF . tPV

    tPV  shift, and go to state 117


State 96

   11 FunCall: tID tPO CallArgs tPF . tPV

    tPV  shift, and go to state 118


State 97

   18 CallArgNext: tV . CallArgs

    tNB  shift, and go to state 57
    tID  shift, and go to state 73

    $default  reduce using rule 17 (CallArgs)

    FunCall     go to state 59
    CallArgs    go to state 119
    Operand     go to state 75
    Operations  go to state 61


State 98

   16 CallArgs: Operand CallArgNext .

    $default  reduce using rule 16 (CallArgs)


State 99

   55 VarAssign: tID tEQUAL Operand tPV .

    $default  reduce using rule 55 (VarAssign)


State 100

   39 ConstDeclarationAndAssign: Type tINT tID tEQUAL . tNB tPV
   40 VarDeclarationAndAssign: Type tINT tID tEQUAL . tNB tPV
   41                        | Type tINT tID tEQUAL . tID tPV

    tNB  shift, and go to state 120
    tID  shift, and go to state 121


State 101

   43 VarDeclaration: Type tINT tID $@6 . NextVar

    tPV     shift, and go to state 122
    tCONST  shift, and go to state 24

    $default  reduce using rule 21 (Type)

    Type     go to state 123
    NextVar  go to state 124


State 102

   33 Instruction: ifCondition tAO $@3 Body . tAF $@4 elseCondition

    tAF  shift, and go to state 125


State 103

   35 Instruction: whileCondition tAO $@5 Body . tAF

    tAF  shift, and go to state 126


State 104

    8 Function: tVOID tID tPO DecArgs tPF tAO $@2 Body . tAF

    tAF  shift, and go to state 127


State 105

    6 Function: tINT tID tPO DecArgs tPF tAO $@1 Body . Return tAF

    tRETURN  shift, and go to state 128

    $default  reduce using rule 10 (Return)

    Return  go to state 129


State 106

   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   52           | Operand tSUB Operand .
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand

    tMUL  shift, and go to state 85
    tDIV  shift, and go to state 86

    $default  reduce using rule 52 (Operations)


State 107

   51 Operations: Operand . tADD Operand
   51           | Operand tADD Operand .
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand

    tMUL  shift, and go to state 85
    tDIV  shift, and go to state 86

    $default  reduce using rule 51 (Operations)


State 108

   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   53           | Operand tMUL Operand .
   54           | Operand . tDIV Operand

    $default  reduce using rule 53 (Operations)


State 109

   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand
   54           | Operand tDIV Operand .

    $default  reduce using rule 54 (Operations)


State 110

   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand
   67 ifComparaison: Operand tINF Operand .

    tSUB  shift, and go to state 83
    tADD  shift, and go to state 84
    tMUL  shift, and go to state 85
    tDIV  shift, and go to state 86

    $default  reduce using rule 67 (ifComparaison)


State 111

   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand
   68 ifComparaison: Operand tSUP Operand .

    tSUB  shift, and go to state 83
    tADD  shift, and go to state 84
    tMUL  shift, and go to state 85
    tDIV  shift, and go to state 86

    $default  reduce using rule 68 (ifComparaison)


State 112

   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand
   66 ifComparaison: Operand tEQEQ Operand .

    tSUB  shift, and go to state 83
    tADD  shift, and go to state 84
    tMUL  shift, and go to state 85
    tDIV  shift, and go to state 86

    $default  reduce using rule 66 (ifComparaison)


State 113

   57 ifCondition: tIF tPO ifBoolExpression tPF $@8 . elseCondition

    tELSE  shift, and go to state 130

    $default  reduce using rule 60 (elseCondition)

    elseCondition  go to state 131


State 114

   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand
   74 whileComparaison: Operand tINF Operand .

    tSUB  shift, and go to state 83
    tADD  shift, and go to state 84
    tMUL  shift, and go to state 85
    tDIV  shift, and go to state 86

    $default  reduce using rule 74 (whileComparaison)


State 115

   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand
   75 whileComparaison: Operand tSUP Operand .

    tSUB  shift, and go to state 83
    tADD  shift, and go to state 84
    tMUL  shift, and go to state 85
    tDIV  shift, and go to state 86

    $default  reduce using rule 75 (whileComparaison)


State 116

   51 Operations: Operand . tADD Operand
   52           | Operand . tSUB Operand
   53           | Operand . tMUL Operand
   54           | Operand . tDIV Operand
   73 whileComparaison: Operand tEQEQ Operand .

    tSUB  shift, and go to state 83
    tADD  shift, and go to state 84
    tMUL  shift, and go to state 85
    tDIV  shift, and go to state 86

    $default  reduce using rule 73 (whileComparaison)


State 117

   36 Print: tPRINT tPO PrintArg tPF tPV .

    $default  reduce using rule 36 (Print)


State 118

   11 FunCall: tID tPO CallArgs tPF tPV .

    $default  reduce using rule 11 (FunCall)


State 119

   18 CallArgNext: tV CallArgs .

    $default  reduce using rule 18 (CallArgNext)


State 120

   39 ConstDeclarationAndAssign: Type tINT tID tEQUAL tNB . tPV
   40 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB . tPV

    tPV  shift, and go to state 132


State 121

   41 VarDeclarationAndAssign: Type tINT tID tEQUAL tID . tPV

    tPV  shift, and go to state 133


State 122

   46 NextVar: tPV .

    $default  reduce using rule 46 (NextVar)


State 123

   45 NextVar: Type . tV tID $@7 NextVar

    tV  shift, and go to state 134


State 124

   43 VarDeclaration: Type tINT tID $@6 NextVar .

    $default  reduce using rule 43 (VarDeclaration)


State 125

   33 Instruction: ifCondition tAO $@3 Body tAF . $@4 elseCondition

    $default  reduce using rule 32 ($@4)

    $@4  go to state 135


State 126

   35 Instruction: whileCondition tAO $@5 Body tAF .

    $default  reduce using rule 35 (Instruction)


State 127

    8 Function: tVOID tID tPO DecArgs tPF tAO $@2 Body tAF .

    $default  reduce using rule 8 (Function)


State 128

    9 Return: tRETURN . tID tPV

    tID  shift, and go to state 136


State 129

    6 Function: tINT tID tPO DecArgs tPF tAO $@1 Body Return . tAF

    tAF  shift, and go to state 137


State 130

   59 elseCondition: tELSE . tAO $@9 Body tAF

    tAO  shift, and go to state 138


State 131

   57 ifCondition: tIF tPO ifBoolExpression tPF $@8 elseCondition .

    $default  reduce using rule 57 (ifCondition)


State 132

   39 ConstDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV .
   40 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV .

    tRETURN   reduce using rule 39 (ConstDeclarationAndAssign)
    tRETURN   [reduce using rule 40 (VarDeclarationAndAssign)]
    tIF       reduce using rule 39 (ConstDeclarationAndAssign)
    tIF       [reduce using rule 40 (VarDeclarationAndAssign)]
    tWHILE    reduce using rule 39 (ConstDeclarationAndAssign)
    tWHILE    [reduce using rule 40 (VarDeclarationAndAssign)]
    tPRINT    reduce using rule 39 (ConstDeclarationAndAssign)
    tPRINT    [reduce using rule 40 (VarDeclarationAndAssign)]
    tAF       reduce using rule 39 (ConstDeclarationAndAssign)
    tAF       [reduce using rule 40 (VarDeclarationAndAssign)]
    tINT      reduce using rule 39 (ConstDeclarationAndAssign)
    tINT      [reduce using rule 40 (VarDeclarationAndAssign)]
    tCONST    reduce using rule 39 (ConstDeclarationAndAssign)
    tCONST    [reduce using rule 40 (VarDeclarationAndAssign)]
    tID       reduce using rule 39 (ConstDeclarationAndAssign)
    tID       [reduce using rule 40 (VarDeclarationAndAssign)]
    $default  reduce using rule 39 (ConstDeclarationAndAssign)


State 133

   41 VarDeclarationAndAssign: Type tINT tID tEQUAL tID tPV .

    $default  reduce using rule 41 (VarDeclarationAndAssign)


State 134

   45 NextVar: Type tV . tID $@7 NextVar

    tID  shift, and go to state 139


State 135

   33 Instruction: ifCondition tAO $@3 Body tAF $@4 . elseCondition

    tELSE  shift, and go to state 130

    $default  reduce using rule 60 (elseCondition)

    elseCondition  go to state 140


State 136

    9 Return: tRETURN tID . tPV

    tPV  shift, and go to state 141


State 137

    6 Function: tINT tID tPO DecArgs tPF tAO $@1 Body Return tAF .

    $default  reduce using rule 6 (Function)


State 138

   59 elseCondition: tELSE tAO . $@9 Body tAF

    $default  reduce using rule 58 ($@9)

    $@9  go to state 142


State 139

   45 NextVar: Type tV tID . $@7 NextVar

    $default  reduce using rule 44 ($@7)

    $@7  go to state 143


State 140

   33 Instruction: ifCondition tAO $@3 Body tAF $@4 elseCondition .

    $default  reduce using rule 33 (Instruction)


State 141

    9 Return: tRETURN tID tPV .

    $default  reduce using rule 9 (Return)


State 142

   59 elseCondition: tELSE tAO $@9 . Body tAF

    tIF     shift, and go to state 21
    tWHILE  shift, and go to state 22
    tPRINT  shift, and go to state 23
    tCONST  shift, and go to state 24
    tID     shift, and go to state 25

    tAF       reduce using rule 24 (Instructions)
    $default  reduce using rule 21 (Type)

    FunCall                    go to state 26
    Type                       go to state 27
    Body                       go to state 144
    Instructions               go to state 29
    Instruction                go to state 30
    Print                      go to state 31
    ConstDeclarationAndAssign  go to state 32
    VarDeclarationAndAssign    go to state 33
    VarDeclaration             go to state 34
    VarAssign                  go to state 35
    ifCondition                go to state 36
    whileCondition             go to state 37


State 143

   45 NextVar: Type tV tID $@7 . NextVar

    tPV     shift, and go to state 122
    tCONST  shift, and go to state 24

    $default  reduce using rule 21 (Type)

    Type     go to state 123
    NextVar  go to state 145


State 144

   59 elseCondition: tELSE tAO $@9 Body . tAF

    tAF  shift, and go to state 146


State 145

   45 NextVar: Type tV tID $@7 NextVar .

    $default  reduce using rule 45 (NextVar)


State 146

   59 elseCondition: tELSE tAO $@9 Body tAF .

    $default  reduce using rule 59 (elseCondition)
