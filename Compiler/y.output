Nonterminals useless in grammar

    Comparator


Terminals unused in grammar

    tSTRING


Rules useless in grammar

   82 Comparator: tINF
   83           | tSUP
   84           | tEQEQ


Grammar

    0 $accept: Program $end

    1 Program: Main Functions

    2 Main: tVOID tMAIN tPO tPF tAO Body tAF

    3 Functions: Function
    4          | Function Functions

    5 $@1: %empty

    6 $@2: %empty

    7 $@3: %empty

    8 $@4: %empty

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

   10 $@5: %empty

   11 $@6: %empty

   12 $@7: %empty

   13 Function: tVOID tID tPO $@5 DecArgs $@6 tPF tAO $@7 Body tAF

   14 $@8: %empty

   15 $@9: %empty

   16 FunCall: tID $@8 tPO $@9 CallArgs tPF

   17 $@10: %empty

   18 DecArgs: tINT tID $@10 NextDecArg
   19        | %empty

   20 NextDecArg: tV DecArgs
   21           | %empty

   22 $@11: %empty

   23 CallArgs: tID $@11 CallArgNext
   24         | tNB CallArgNext
   25         | %empty

   26 CallArgNext: tV CallArgs
   27            | %empty

   28 Type: tCONST
   29     | %empty

   30 Body: Instructions

   31 Instructions: Instruction Instructions
   32             | %empty

   33 Instruction: FunCall tPV
   34            | Print
   35            | VarDeclarationAndAssign
   36            | VarDeclaration
   37            | VarAssign

   38 $@12: %empty

   39 $@13: %empty

   40 Instruction: ifCondition tAO $@12 Body tAF $@13 elseCondition

   41 $@14: %empty

   42 Instruction: whileCondition tAO $@14 Body tAF

   43 Print: tPRINT tPO PrintArg tPF tPV

   44 PrintArg: tID
   45         | tNB

   46 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV
   47                        | Type tINT tID tEQUAL tID tPV

   48 $@15: %empty

   49 VarDeclaration: Type tINT tID $@15 NextVar

   50 $@16: %empty

   51 NextVar: Type tV tID $@16 NextVar
   52        | tPV

   53 Operand: FunCall
   54        | Operations
   55        | tID
   56        | tNB

   57 Operations: Operand tADD Operand
   58           | Operand tSUB Operand
   59           | Operand tMUL Operand
   60           | Operand tDIV Operand

   61 VarAssign: tID tEQUAL Operand tPV

   62 $@17: %empty

   63 ifCondition: tIF tPO ifBoolExpression tPF $@17 elseCondition

   64 $@18: %empty

   65 elseCondition: tELSE tAO $@18 Body tAF
   66              | %empty

   67 whileCondition: tWHILE tPO whileBoolExpression tPF

   68 ifBoolExpression: ifComparaison
   69                 | tID
   70                 | tTRUE
   71                 | tFALSE

   72 ifComparaison: Operand tEQEQ Operand
   73              | Operand tINF Operand
   74              | Operand tSUP Operand

   75 whileBoolExpression: whileComparaison
   76                    | tID
   77                    | tTRUE
   78                    | tFALSE

   79 whileComparaison: Operand tEQEQ Operand
   80                 | Operand tINF Operand
   81                 | Operand tSUP Operand


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tMAIN (258) 2
    tRETURN (259) 9
    tIF (260) 63
    tWHILE (261) 67
    tPRINT (262) 43
    tELSE (263) 65
    tAO (264) 2 9 13 40 42 65
    tAF (265) 2 9 13 40 42 65
    tPO (266) 2 9 13 16 43 63 67
    tPF (267) 2 9 13 16 43 63 67
    tV (268) 20 26 51
    tPV (269) 9 33 43 46 47 52 61
    tEQUAL (270) 46 47 61
    tVOID (271) 2 13
    tINT (272) 9 18 46 47 49
    tSTRING (273)
    tSUB (274) 58
    tADD (275) 57
    tMUL (276) 59
    tDIV (277) 60
    tINF (278) 73 80
    tSUP (279) 74 81
    tEQEQ (280) 72 79
    tTRUE (281) 70 77
    tFALSE (282) 71 78
    tCONST (283) 28
    tNB <nb> (284) 24 45 46 56
    tID <string> (285) 9 13 16 18 23 44 46 47 49 51 55 61 69 76


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    Program (32)
        on left: 1
        on right: 0
    Main (33)
        on left: 2
        on right: 1
    Functions (34)
        on left: 3 4
        on right: 1 4
    Function (35)
        on left: 9 13
        on right: 3 4
    $@1 (36)
        on left: 5
        on right: 9
    $@2 (37)
        on left: 6
        on right: 9
    $@3 (38)
        on left: 7
        on right: 9
    $@4 (39)
        on left: 8
        on right: 9
    $@5 (40)
        on left: 10
        on right: 13
    $@6 (41)
        on left: 11
        on right: 13
    $@7 (42)
        on left: 12
        on right: 13
    FunCall <string> (43)
        on left: 16
        on right: 33 53
    $@8 (44)
        on left: 14
        on right: 16
    $@9 (45)
        on left: 15
        on right: 16
    DecArgs (46)
        on left: 18 19
        on right: 9 13 20
    $@10 (47)
        on left: 17
        on right: 18
    NextDecArg (48)
        on left: 20 21
        on right: 18
    CallArgs (49)
        on left: 23 24 25
        on right: 16 26
    $@11 (50)
        on left: 22
        on right: 23
    CallArgNext (51)
        on left: 26 27
        on right: 23 24
    Type <nb> (52)
        on left: 28 29
        on right: 46 47 49 51
    Body (53)
        on left: 30
        on right: 2 9 13 40 42 65
    Instructions (54)
        on left: 31 32
        on right: 30 31
    Instruction (55)
        on left: 33 34 35 36 37 40 42
        on right: 31
    $@12 (56)
        on left: 38
        on right: 40
    $@13 (57)
        on left: 39
        on right: 40
    $@14 (58)
        on left: 41
        on right: 42
    Print (59)
        on left: 43
        on right: 34
    PrintArg (60)
        on left: 44 45
        on right: 43
    VarDeclarationAndAssign (61)
        on left: 46 47
        on right: 35
    VarDeclaration (62)
        on left: 49
        on right: 36
    $@15 (63)
        on left: 48
        on right: 49
    NextVar (64)
        on left: 51 52
        on right: 49 51
    $@16 (65)
        on left: 50
        on right: 51
    Operand (66)
        on left: 53 54 55 56
        on right: 57 58 59 60 61 72 73 74 79 80 81
    Operations (67)
        on left: 57 58 59 60
        on right: 54
    VarAssign (68)
        on left: 61
        on right: 37
    ifCondition (69)
        on left: 63
        on right: 40
    $@17 (70)
        on left: 62
        on right: 63
    elseCondition (71)
        on left: 65 66
        on right: 40 63
    $@18 (72)
        on left: 64
        on right: 65
    whileCondition (73)
        on left: 67
        on right: 42
    ifBoolExpression (74)
        on left: 68 69 70 71
        on right: 63
    ifComparaison (75)
        on left: 72 73 74
        on right: 68
    whileBoolExpression (76)
        on left: 75 76 77 78
        on right: 67
    whileComparaison (77)
        on left: 79 80 81
        on right: 75


State 0

    0 $accept: . Program $end

    tVOID  shift, and go to state 1

    Program  go to state 2
    Main     go to state 3


State 1

    2 Main: tVOID . tMAIN tPO tPF tAO Body tAF

    tMAIN  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: Main . Functions

    tVOID  shift, and go to state 6
    tINT   shift, and go to state 7

    Functions  go to state 8
    Function   go to state 9


State 4

    2 Main: tVOID tMAIN . tPO tPF tAO Body tAF

    tPO  shift, and go to state 10


State 5

    0 $accept: Program $end .

    $default  accept


State 6

   13 Function: tVOID . tID tPO $@5 DecArgs $@6 tPF tAO $@7 Body tAF

    tID  shift, and go to state 11


State 7

    9 Function: tINT . tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

    tID  shift, and go to state 12


State 8

    1 Program: Main Functions .

    $default  reduce using rule 1 (Program)


State 9

    3 Functions: Function .
    4          | Function . Functions

    tVOID  shift, and go to state 6
    tINT   shift, and go to state 7

    $default  reduce using rule 3 (Functions)

    Functions  go to state 13
    Function   go to state 9


State 10

    2 Main: tVOID tMAIN tPO . tPF tAO Body tAF

    tPF  shift, and go to state 14


State 11

   13 Function: tVOID tID . tPO $@5 DecArgs $@6 tPF tAO $@7 Body tAF

    tPO  shift, and go to state 15


State 12

    9 Function: tINT tID . tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

    tPO  shift, and go to state 16


State 13

    4 Functions: Function Functions .

    $default  reduce using rule 4 (Functions)


State 14

    2 Main: tVOID tMAIN tPO tPF . tAO Body tAF

    tAO  shift, and go to state 17


State 15

   13 Function: tVOID tID tPO . $@5 DecArgs $@6 tPF tAO $@7 Body tAF

    $default  reduce using rule 10 ($@5)

    $@5  go to state 18


State 16

    9 Function: tINT tID tPO . $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

    $default  reduce using rule 5 ($@1)

    $@1  go to state 19


State 17

    2 Main: tVOID tMAIN tPO tPF tAO . Body tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 32 (Instructions)
    $default  reduce using rule 29 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 27
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 18

   13 Function: tVOID tID tPO $@5 . DecArgs $@6 tPF tAO $@7 Body tAF

    tINT  shift, and go to state 36

    $default  reduce using rule 19 (DecArgs)

    DecArgs  go to state 37


State 19

    9 Function: tINT tID tPO $@1 . DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

    tINT  shift, and go to state 36

    $default  reduce using rule 19 (DecArgs)

    DecArgs  go to state 38


State 20

   63 ifCondition: tIF . tPO ifBoolExpression tPF $@17 elseCondition

    tPO  shift, and go to state 39


State 21

   67 whileCondition: tWHILE . tPO whileBoolExpression tPF

    tPO  shift, and go to state 40


State 22

   43 Print: tPRINT . tPO PrintArg tPF tPV

    tPO  shift, and go to state 41


State 23

   28 Type: tCONST .

    $default  reduce using rule 28 (Type)


State 24

   16 FunCall: tID . $@8 tPO $@9 CallArgs tPF
   61 VarAssign: tID . tEQUAL Operand tPV

    tEQUAL  shift, and go to state 42

    $default  reduce using rule 14 ($@8)

    $@8  go to state 43


State 25

   33 Instruction: FunCall . tPV

    tPV  shift, and go to state 44


State 26

   46 VarDeclarationAndAssign: Type . tINT tID tEQUAL tNB tPV
   47                        | Type . tINT tID tEQUAL tID tPV
   49 VarDeclaration: Type . tINT tID $@15 NextVar

    tINT  shift, and go to state 45


State 27

    2 Main: tVOID tMAIN tPO tPF tAO Body . tAF

    tAF  shift, and go to state 46


State 28

   30 Body: Instructions .

    $default  reduce using rule 30 (Body)


State 29

   31 Instructions: Instruction . Instructions

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tINT      reduce using rule 29 (Type)
    $default  reduce using rule 32 (Instructions)

    FunCall                  go to state 25
    Type                     go to state 26
    Instructions             go to state 47
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 30

   34 Instruction: Print .

    $default  reduce using rule 34 (Instruction)


State 31

   35 Instruction: VarDeclarationAndAssign .

    $default  reduce using rule 35 (Instruction)


State 32

   36 Instruction: VarDeclaration .

    $default  reduce using rule 36 (Instruction)


State 33

   37 Instruction: VarAssign .

    $default  reduce using rule 37 (Instruction)


State 34

   40 Instruction: ifCondition . tAO $@12 Body tAF $@13 elseCondition

    tAO  shift, and go to state 48


State 35

   42 Instruction: whileCondition . tAO $@14 Body tAF

    tAO  shift, and go to state 49


State 36

   18 DecArgs: tINT . tID $@10 NextDecArg

    tID  shift, and go to state 50


State 37

   13 Function: tVOID tID tPO $@5 DecArgs . $@6 tPF tAO $@7 Body tAF

    $default  reduce using rule 11 ($@6)

    $@6  go to state 51


State 38

    9 Function: tINT tID tPO $@1 DecArgs . $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

    $default  reduce using rule 6 ($@2)

    $@2  go to state 52


State 39

   63 ifCondition: tIF tPO . ifBoolExpression tPF $@17 elseCondition

    tTRUE   shift, and go to state 53
    tFALSE  shift, and go to state 54
    tNB     shift, and go to state 55
    tID     shift, and go to state 56

    FunCall           go to state 57
    Operand           go to state 58
    Operations        go to state 59
    ifBoolExpression  go to state 60
    ifComparaison     go to state 61


State 40

   67 whileCondition: tWHILE tPO . whileBoolExpression tPF

    tTRUE   shift, and go to state 62
    tFALSE  shift, and go to state 63
    tNB     shift, and go to state 55
    tID     shift, and go to state 64

    FunCall              go to state 57
    Operand              go to state 65
    Operations           go to state 59
    whileBoolExpression  go to state 66
    whileComparaison     go to state 67


State 41

   43 Print: tPRINT tPO . PrintArg tPF tPV

    tNB  shift, and go to state 68
    tID  shift, and go to state 69

    PrintArg  go to state 70


State 42

   61 VarAssign: tID tEQUAL . Operand tPV

    tNB  shift, and go to state 55
    tID  shift, and go to state 71

    FunCall     go to state 57
    Operand     go to state 72
    Operations  go to state 59


State 43

   16 FunCall: tID $@8 . tPO $@9 CallArgs tPF

    tPO  shift, and go to state 73


State 44

   33 Instruction: FunCall tPV .

    $default  reduce using rule 33 (Instruction)


State 45

   46 VarDeclarationAndAssign: Type tINT . tID tEQUAL tNB tPV
   47                        | Type tINT . tID tEQUAL tID tPV
   49 VarDeclaration: Type tINT . tID $@15 NextVar

    tID  shift, and go to state 74


State 46

    2 Main: tVOID tMAIN tPO tPF tAO Body tAF .

    $default  reduce using rule 2 (Main)


State 47

   31 Instructions: Instruction Instructions .

    $default  reduce using rule 31 (Instructions)


State 48

   40 Instruction: ifCondition tAO . $@12 Body tAF $@13 elseCondition

    $default  reduce using rule 38 ($@12)

    $@12  go to state 75


State 49

   42 Instruction: whileCondition tAO . $@14 Body tAF

    $default  reduce using rule 41 ($@14)

    $@14  go to state 76


State 50

   18 DecArgs: tINT tID . $@10 NextDecArg

    $default  reduce using rule 17 ($@10)

    $@10  go to state 77


State 51

   13 Function: tVOID tID tPO $@5 DecArgs $@6 . tPF tAO $@7 Body tAF

    tPF  shift, and go to state 78


State 52

    9 Function: tINT tID tPO $@1 DecArgs $@2 . tPF tAO $@3 Body tRETURN tID tPV $@4 tAF

    tPF  shift, and go to state 79


State 53

   70 ifBoolExpression: tTRUE .

    $default  reduce using rule 70 (ifBoolExpression)


State 54

   71 ifBoolExpression: tFALSE .

    $default  reduce using rule 71 (ifBoolExpression)


State 55

   56 Operand: tNB .

    $default  reduce using rule 56 (Operand)


State 56

   16 FunCall: tID . $@8 tPO $@9 CallArgs tPF
   55 Operand: tID .
   69 ifBoolExpression: tID .

    tPO       reduce using rule 14 ($@8)
    tPF       reduce using rule 69 (ifBoolExpression)
    $default  reduce using rule 55 (Operand)

    $@8  go to state 43


State 57

   53 Operand: FunCall .

    $default  reduce using rule 53 (Operand)


State 58

   57 Operations: Operand . tADD Operand
   58           | Operand . tSUB Operand
   59           | Operand . tMUL Operand
   60           | Operand . tDIV Operand
   72 ifComparaison: Operand . tEQEQ Operand
   73              | Operand . tINF Operand
   74              | Operand . tSUP Operand

    tSUB   shift, and go to state 80
    tADD   shift, and go to state 81
    tMUL   shift, and go to state 82
    tDIV   shift, and go to state 83
    tINF   shift, and go to state 84
    tSUP   shift, and go to state 85
    tEQEQ  shift, and go to state 86


State 59

   54 Operand: Operations .

    $default  reduce using rule 54 (Operand)


State 60

   63 ifCondition: tIF tPO ifBoolExpression . tPF $@17 elseCondition

    tPF  shift, and go to state 87


State 61

   68 ifBoolExpression: ifComparaison .

    $default  reduce using rule 68 (ifBoolExpression)


State 62

   77 whileBoolExpression: tTRUE .

    $default  reduce using rule 77 (whileBoolExpression)


State 63

   78 whileBoolExpression: tFALSE .

    $default  reduce using rule 78 (whileBoolExpression)


State 64

   16 FunCall: tID . $@8 tPO $@9 CallArgs tPF
   55 Operand: tID .
   76 whileBoolExpression: tID .

    tPO       reduce using rule 14 ($@8)
    tPF       reduce using rule 76 (whileBoolExpression)
    $default  reduce using rule 55 (Operand)

    $@8  go to state 43


State 65

   57 Operations: Operand . tADD Operand
   58           | Operand . tSUB Operand
   59           | Operand . tMUL Operand
   60           | Operand . tDIV Operand
   79 whileComparaison: Operand . tEQEQ Operand
   80                 | Operand . tINF Operand
   81                 | Operand . tSUP Operand

    tSUB   shift, and go to state 80
    tADD   shift, and go to state 81
    tMUL   shift, and go to state 82
    tDIV   shift, and go to state 83
    tINF   shift, and go to state 88
    tSUP   shift, and go to state 89
    tEQEQ  shift, and go to state 90


State 66

   67 whileCondition: tWHILE tPO whileBoolExpression . tPF

    tPF  shift, and go to state 91


State 67

   75 whileBoolExpression: whileComparaison .

    $default  reduce using rule 75 (whileBoolExpression)


State 68

   45 PrintArg: tNB .

    $default  reduce using rule 45 (PrintArg)


State 69

   44 PrintArg: tID .

    $default  reduce using rule 44 (PrintArg)


State 70

   43 Print: tPRINT tPO PrintArg . tPF tPV

    tPF  shift, and go to state 92


State 71

   16 FunCall: tID . $@8 tPO $@9 CallArgs tPF
   55 Operand: tID .

    tPO       reduce using rule 14 ($@8)
    $default  reduce using rule 55 (Operand)

    $@8  go to state 43


State 72

   57 Operations: Operand . tADD Operand
   58           | Operand . tSUB Operand
   59           | Operand . tMUL Operand
   60           | Operand . tDIV Operand
   61 VarAssign: tID tEQUAL Operand . tPV

    tPV   shift, and go to state 93
    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83


State 73

   16 FunCall: tID $@8 tPO . $@9 CallArgs tPF

    $default  reduce using rule 15 ($@9)

    $@9  go to state 94


State 74

   46 VarDeclarationAndAssign: Type tINT tID . tEQUAL tNB tPV
   47                        | Type tINT tID . tEQUAL tID tPV
   49 VarDeclaration: Type tINT tID . $@15 NextVar

    tEQUAL  shift, and go to state 95

    $default  reduce using rule 48 ($@15)

    $@15  go to state 96


State 75

   40 Instruction: ifCondition tAO $@12 . Body tAF $@13 elseCondition

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 32 (Instructions)
    $default  reduce using rule 29 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 97
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 76

   42 Instruction: whileCondition tAO $@14 . Body tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 32 (Instructions)
    $default  reduce using rule 29 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 98
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 77

   18 DecArgs: tINT tID $@10 . NextDecArg

    tV  shift, and go to state 99

    $default  reduce using rule 21 (NextDecArg)

    NextDecArg  go to state 100


State 78

   13 Function: tVOID tID tPO $@5 DecArgs $@6 tPF . tAO $@7 Body tAF

    tAO  shift, and go to state 101


State 79

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF . tAO $@3 Body tRETURN tID tPV $@4 tAF

    tAO  shift, and go to state 102


State 80

   58 Operations: Operand tSUB . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 71

    FunCall     go to state 57
    Operand     go to state 103
    Operations  go to state 59


State 81

   57 Operations: Operand tADD . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 71

    FunCall     go to state 57
    Operand     go to state 104
    Operations  go to state 59


State 82

   59 Operations: Operand tMUL . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 71

    FunCall     go to state 57
    Operand     go to state 105
    Operations  go to state 59


State 83

   60 Operations: Operand tDIV . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 71

    FunCall     go to state 57
    Operand     go to state 106
    Operations  go to state 59


State 84

   73 ifComparaison: Operand tINF . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 71

    FunCall     go to state 57
    Operand     go to state 107
    Operations  go to state 59


State 85

   74 ifComparaison: Operand tSUP . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 71

    FunCall     go to state 57
    Operand     go to state 108
    Operations  go to state 59


State 86

   72 ifComparaison: Operand tEQEQ . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 71

    FunCall     go to state 57
    Operand     go to state 109
    Operations  go to state 59


State 87

   63 ifCondition: tIF tPO ifBoolExpression tPF . $@17 elseCondition

    $default  reduce using rule 62 ($@17)

    $@17  go to state 110


State 88

   80 whileComparaison: Operand tINF . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 71

    FunCall     go to state 57
    Operand     go to state 111
    Operations  go to state 59


State 89

   81 whileComparaison: Operand tSUP . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 71

    FunCall     go to state 57
    Operand     go to state 112
    Operations  go to state 59


State 90

   79 whileComparaison: Operand tEQEQ . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 71

    FunCall     go to state 57
    Operand     go to state 113
    Operations  go to state 59


State 91

   67 whileCondition: tWHILE tPO whileBoolExpression tPF .

    $default  reduce using rule 67 (whileCondition)


State 92

   43 Print: tPRINT tPO PrintArg tPF . tPV

    tPV  shift, and go to state 114


State 93

   61 VarAssign: tID tEQUAL Operand tPV .

    $default  reduce using rule 61 (VarAssign)


State 94

   16 FunCall: tID $@8 tPO $@9 . CallArgs tPF

    tNB  shift, and go to state 115
    tID  shift, and go to state 116

    $default  reduce using rule 25 (CallArgs)

    CallArgs  go to state 117


State 95

   46 VarDeclarationAndAssign: Type tINT tID tEQUAL . tNB tPV
   47                        | Type tINT tID tEQUAL . tID tPV

    tNB  shift, and go to state 118
    tID  shift, and go to state 119


State 96

   49 VarDeclaration: Type tINT tID $@15 . NextVar

    tPV     shift, and go to state 120
    tCONST  shift, and go to state 23

    $default  reduce using rule 29 (Type)

    Type     go to state 121
    NextVar  go to state 122


State 97

   40 Instruction: ifCondition tAO $@12 Body . tAF $@13 elseCondition

    tAF  shift, and go to state 123


State 98

   42 Instruction: whileCondition tAO $@14 Body . tAF

    tAF  shift, and go to state 124


State 99

   20 NextDecArg: tV . DecArgs

    tINT  shift, and go to state 36

    $default  reduce using rule 19 (DecArgs)

    DecArgs  go to state 125


State 100

   18 DecArgs: tINT tID $@10 NextDecArg .

    $default  reduce using rule 18 (DecArgs)


State 101

   13 Function: tVOID tID tPO $@5 DecArgs $@6 tPF tAO . $@7 Body tAF

    $default  reduce using rule 12 ($@7)

    $@7  go to state 126


State 102

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO . $@3 Body tRETURN tID tPV $@4 tAF

    $default  reduce using rule 7 ($@3)

    $@3  go to state 127


State 103

   57 Operations: Operand . tADD Operand
   58           | Operand . tSUB Operand
   58           | Operand tSUB Operand .
   59           | Operand . tMUL Operand
   60           | Operand . tDIV Operand

    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 58 (Operations)


State 104

   57 Operations: Operand . tADD Operand
   57           | Operand tADD Operand .
   58           | Operand . tSUB Operand
   59           | Operand . tMUL Operand
   60           | Operand . tDIV Operand

    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 57 (Operations)


State 105

   57 Operations: Operand . tADD Operand
   58           | Operand . tSUB Operand
   59           | Operand . tMUL Operand
   59           | Operand tMUL Operand .
   60           | Operand . tDIV Operand

    $default  reduce using rule 59 (Operations)


State 106

   57 Operations: Operand . tADD Operand
   58           | Operand . tSUB Operand
   59           | Operand . tMUL Operand
   60           | Operand . tDIV Operand
   60           | Operand tDIV Operand .

    $default  reduce using rule 60 (Operations)


State 107

   57 Operations: Operand . tADD Operand
   58           | Operand . tSUB Operand
   59           | Operand . tMUL Operand
   60           | Operand . tDIV Operand
   73 ifComparaison: Operand tINF Operand .

    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 73 (ifComparaison)


State 108

   57 Operations: Operand . tADD Operand
   58           | Operand . tSUB Operand
   59           | Operand . tMUL Operand
   60           | Operand . tDIV Operand
   74 ifComparaison: Operand tSUP Operand .

    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 74 (ifComparaison)


State 109

   57 Operations: Operand . tADD Operand
   58           | Operand . tSUB Operand
   59           | Operand . tMUL Operand
   60           | Operand . tDIV Operand
   72 ifComparaison: Operand tEQEQ Operand .

    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 72 (ifComparaison)


State 110

   63 ifCondition: tIF tPO ifBoolExpression tPF $@17 . elseCondition

    tELSE  shift, and go to state 128

    $default  reduce using rule 66 (elseCondition)

    elseCondition  go to state 129


State 111

   57 Operations: Operand . tADD Operand
   58           | Operand . tSUB Operand
   59           | Operand . tMUL Operand
   60           | Operand . tDIV Operand
   80 whileComparaison: Operand tINF Operand .

    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 80 (whileComparaison)


State 112

   57 Operations: Operand . tADD Operand
   58           | Operand . tSUB Operand
   59           | Operand . tMUL Operand
   60           | Operand . tDIV Operand
   81 whileComparaison: Operand tSUP Operand .

    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 81 (whileComparaison)


State 113

   57 Operations: Operand . tADD Operand
   58           | Operand . tSUB Operand
   59           | Operand . tMUL Operand
   60           | Operand . tDIV Operand
   79 whileComparaison: Operand tEQEQ Operand .

    tSUB  shift, and go to state 80
    tADD  shift, and go to state 81
    tMUL  shift, and go to state 82
    tDIV  shift, and go to state 83

    $default  reduce using rule 79 (whileComparaison)


State 114

   43 Print: tPRINT tPO PrintArg tPF tPV .

    $default  reduce using rule 43 (Print)


State 115

   24 CallArgs: tNB . CallArgNext

    tV  shift, and go to state 130

    $default  reduce using rule 27 (CallArgNext)

    CallArgNext  go to state 131


State 116

   23 CallArgs: tID . $@11 CallArgNext

    $default  reduce using rule 22 ($@11)

    $@11  go to state 132


State 117

   16 FunCall: tID $@8 tPO $@9 CallArgs . tPF

    tPF  shift, and go to state 133


State 118

   46 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB . tPV

    tPV  shift, and go to state 134


State 119

   47 VarDeclarationAndAssign: Type tINT tID tEQUAL tID . tPV

    tPV  shift, and go to state 135


State 120

   52 NextVar: tPV .

    $default  reduce using rule 52 (NextVar)


State 121

   51 NextVar: Type . tV tID $@16 NextVar

    tV  shift, and go to state 136


State 122

   49 VarDeclaration: Type tINT tID $@15 NextVar .

    $default  reduce using rule 49 (VarDeclaration)


State 123

   40 Instruction: ifCondition tAO $@12 Body tAF . $@13 elseCondition

    $default  reduce using rule 39 ($@13)

    $@13  go to state 137


State 124

   42 Instruction: whileCondition tAO $@14 Body tAF .

    $default  reduce using rule 42 (Instruction)


State 125

   20 NextDecArg: tV DecArgs .

    $default  reduce using rule 20 (NextDecArg)


State 126

   13 Function: tVOID tID tPO $@5 DecArgs $@6 tPF tAO $@7 . Body tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 32 (Instructions)
    $default  reduce using rule 29 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 138
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 127

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 . Body tRETURN tID tPV $@4 tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tRETURN   reduce using rule 32 (Instructions)
    $default  reduce using rule 29 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 139
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 128

   65 elseCondition: tELSE . tAO $@18 Body tAF

    tAO  shift, and go to state 140


State 129

   63 ifCondition: tIF tPO ifBoolExpression tPF $@17 elseCondition .

    $default  reduce using rule 63 (ifCondition)


State 130

   26 CallArgNext: tV . CallArgs

    tNB  shift, and go to state 115
    tID  shift, and go to state 116

    $default  reduce using rule 25 (CallArgs)

    CallArgs  go to state 141


State 131

   24 CallArgs: tNB CallArgNext .

    $default  reduce using rule 24 (CallArgs)


State 132

   23 CallArgs: tID $@11 . CallArgNext

    tV  shift, and go to state 130

    $default  reduce using rule 27 (CallArgNext)

    CallArgNext  go to state 142


State 133

   16 FunCall: tID $@8 tPO $@9 CallArgs tPF .

    $default  reduce using rule 16 (FunCall)


State 134

   46 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV .

    $default  reduce using rule 46 (VarDeclarationAndAssign)


State 135

   47 VarDeclarationAndAssign: Type tINT tID tEQUAL tID tPV .

    $default  reduce using rule 47 (VarDeclarationAndAssign)


State 136

   51 NextVar: Type tV . tID $@16 NextVar

    tID  shift, and go to state 143


State 137

   40 Instruction: ifCondition tAO $@12 Body tAF $@13 . elseCondition

    tELSE  shift, and go to state 128

    $default  reduce using rule 66 (elseCondition)

    elseCondition  go to state 144


State 138

   13 Function: tVOID tID tPO $@5 DecArgs $@6 tPF tAO $@7 Body . tAF

    tAF  shift, and go to state 145


State 139

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body . tRETURN tID tPV $@4 tAF

    tRETURN  shift, and go to state 146


State 140

   65 elseCondition: tELSE tAO . $@18 Body tAF

    $default  reduce using rule 64 ($@18)

    $@18  go to state 147


State 141

   26 CallArgNext: tV CallArgs .

    $default  reduce using rule 26 (CallArgNext)


State 142

   23 CallArgs: tID $@11 CallArgNext .

    $default  reduce using rule 23 (CallArgs)


State 143

   51 NextVar: Type tV tID . $@16 NextVar

    $default  reduce using rule 50 ($@16)

    $@16  go to state 148


State 144

   40 Instruction: ifCondition tAO $@12 Body tAF $@13 elseCondition .

    $default  reduce using rule 40 (Instruction)


State 145

   13 Function: tVOID tID tPO $@5 DecArgs $@6 tPF tAO $@7 Body tAF .

    $default  reduce using rule 13 (Function)


State 146

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN . tID tPV $@4 tAF

    tID  shift, and go to state 149


State 147

   65 elseCondition: tELSE tAO $@18 . Body tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 32 (Instructions)
    $default  reduce using rule 29 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 150
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 148

   51 NextVar: Type tV tID $@16 . NextVar

    tPV     shift, and go to state 120
    tCONST  shift, and go to state 23

    $default  reduce using rule 29 (Type)

    Type     go to state 121
    NextVar  go to state 151


State 149

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID . tPV $@4 tAF

    tPV  shift, and go to state 152


State 150

   65 elseCondition: tELSE tAO $@18 Body . tAF

    tAF  shift, and go to state 153


State 151

   51 NextVar: Type tV tID $@16 NextVar .

    $default  reduce using rule 51 (NextVar)


State 152

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV . $@4 tAF

    $default  reduce using rule 8 ($@4)

    $@4  go to state 154


State 153

   65 elseCondition: tELSE tAO $@18 Body tAF .

    $default  reduce using rule 65 (elseCondition)


State 154

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 . tAF

    tAF  shift, and go to state 155


State 155

    9 Function: tINT tID tPO $@1 DecArgs $@2 tPF tAO $@3 Body tRETURN tID tPV $@4 tAF .

    $default  reduce using rule 9 (Function)
