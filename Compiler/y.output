Nonterminals useless in grammar

    Comparator


Terminals unused in grammar

    tSTRING


Rules useless in grammar

   82 Comparator: tINF
   83           | tSUP
   84           | tEQEQ


State 3 conflicts: 2 shift/reduce
State 9 conflicts: 2 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: Main Functions

    2 Main: tVOID tMAIN tPO tPF tAO Body tAF

    3 Functions: Function
    4          | Function Functions

    5 $@1: %empty

    6 $@2: %empty

    7 $@3: %empty

    8 Function: tINT tID tPO $@1 DecArgs tPF tAO $@2 Body tRETURN tID tPV $@3 tAF

    9 $@4: %empty

   10 $@5: %empty

   11 Function: tVOID tID tPO $@4 DecArgs tPF tAO $@5 Body tAF
   12         | %empty

   13 $@6: %empty

   14 $@7: %empty

   15 FunCall: tID $@6 tPO $@7 CallArgs tPF

   16 $@8: %empty

   17 DecArgs: tINT tID $@8 NextDecArg
   18        | %empty

   19 NextDecArg: tV DecArgs
   20           | %empty

   21 $@9: %empty

   22 CallArgs: tID $@9 CallArgNext
   23         | tNB CallArgNext
   24         | %empty

   25 CallArgNext: tV CallArgs
   26            | %empty

   27 Type: tCONST
   28     | %empty

   29 Body: Instructions

   30 Instructions: Instruction Instructions
   31             | %empty

   32 Instruction: FunCall tPV
   33            | Print
   34            | VarDeclarationAndAssign
   35            | VarDeclaration
   36            | VarAssign

   37 $@10: %empty

   38 $@11: %empty

   39 Instruction: ifCondition tAO $@10 Body tAF $@11 elseCondition

   40 $@12: %empty

   41 Instruction: whileCondition tAO $@12 Body tAF

   42 Print: tPRINT tPO PrintArg tPF tPV

   43 PrintArg: tID
   44         | tNB

   45 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV
   46                        | Type tINT tID tEQUAL tID tPV

   47 $@13: %empty

   48 VarDeclaration: Type tINT tID $@13 NextVar

   49 $@14: %empty

   50 NextVar: Type tV tID $@14 NextVar
   51        | tPV

   52 Operand: FunCall
   53        | Operations
   54        | tID
   55        | tNB

   56 Operations: Operand tADD Operand
   57           | Operand tSUB Operand
   58           | Operand tMUL Operand
   59           | Operand tDIV Operand

   60 VarAssign: tID tEQUAL Operand tPV

   61 $@15: %empty

   62 ifCondition: tIF tPO ifBoolExpression tPF $@15 elseCondition

   63 $@16: %empty

   64 elseCondition: tELSE tAO $@16 Body tAF
   65              | %empty

   66 $@17: %empty

   67 whileCondition: tWHILE tPO $@17 whileBoolExpression tPF

   68 ifBoolExpression: ifComparaison
   69                 | tID
   70                 | tTRUE
   71                 | tFALSE

   72 ifComparaison: Operand tEQEQ Operand
   73              | Operand tINF Operand
   74              | Operand tSUP Operand

   75 whileBoolExpression: whileComparaison
   76                    | tID
   77                    | tTRUE
   78                    | tFALSE

   79 whileComparaison: Operand tEQEQ Operand
   80                 | Operand tINF Operand
   81                 | Operand tSUP Operand


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tMAIN (258) 2
    tRETURN (259) 8
    tIF (260) 62
    tWHILE (261) 67
    tPRINT (262) 42
    tELSE (263) 64
    tAO (264) 2 8 11 39 41 64
    tAF (265) 2 8 11 39 41 64
    tPO (266) 2 8 11 15 42 62 67
    tPF (267) 2 8 11 15 42 62 67
    tV (268) 19 25 50
    tPV (269) 8 32 42 45 46 51 60
    tEQUAL (270) 45 46 60
    tVOID (271) 2 11
    tINT (272) 8 17 45 46 48
    tSTRING (273)
    tSUB (274) 57
    tADD (275) 56
    tMUL (276) 58
    tDIV (277) 59
    tINF (278) 73 80
    tSUP (279) 74 81
    tEQEQ (280) 72 79
    tTRUE (281) 70 77
    tFALSE (282) 71 78
    tCONST (283) 27
    tNB <nb> (284) 23 44 45 55
    tID <string> (285) 8 11 15 17 22 43 45 46 48 50 54 60 69 76


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    Program (32)
        on left: 1
        on right: 0
    Main (33)
        on left: 2
        on right: 1
    Functions (34)
        on left: 3 4
        on right: 1 4
    Function (35)
        on left: 8 11 12
        on right: 3 4
    $@1 (36)
        on left: 5
        on right: 8
    $@2 (37)
        on left: 6
        on right: 8
    $@3 (38)
        on left: 7
        on right: 8
    $@4 (39)
        on left: 9
        on right: 11
    $@5 (40)
        on left: 10
        on right: 11
    FunCall <string> (41)
        on left: 15
        on right: 32 52
    $@6 (42)
        on left: 13
        on right: 15
    $@7 (43)
        on left: 14
        on right: 15
    DecArgs (44)
        on left: 17 18
        on right: 8 11 19
    $@8 (45)
        on left: 16
        on right: 17
    NextDecArg (46)
        on left: 19 20
        on right: 17
    CallArgs (47)
        on left: 22 23 24
        on right: 15 25
    $@9 (48)
        on left: 21
        on right: 22
    CallArgNext (49)
        on left: 25 26
        on right: 22 23
    Type <nb> (50)
        on left: 27 28
        on right: 45 46 48 50
    Body (51)
        on left: 29
        on right: 2 8 11 39 41 64
    Instructions (52)
        on left: 30 31
        on right: 29 30
    Instruction (53)
        on left: 32 33 34 35 36 39 41
        on right: 30
    $@10 (54)
        on left: 37
        on right: 39
    $@11 (55)
        on left: 38
        on right: 39
    $@12 (56)
        on left: 40
        on right: 41
    Print (57)
        on left: 42
        on right: 33
    PrintArg (58)
        on left: 43 44
        on right: 42
    VarDeclarationAndAssign (59)
        on left: 45 46
        on right: 34
    VarDeclaration (60)
        on left: 48
        on right: 35
    $@13 (61)
        on left: 47
        on right: 48
    NextVar (62)
        on left: 50 51
        on right: 48 50
    $@14 (63)
        on left: 49
        on right: 50
    Operand (64)
        on left: 52 53 54 55
        on right: 56 57 58 59 60 72 73 74 79 80 81
    Operations (65)
        on left: 56 57 58 59
        on right: 53
    VarAssign (66)
        on left: 60
        on right: 36
    ifCondition (67)
        on left: 62
        on right: 39
    $@15 (68)
        on left: 61
        on right: 62
    elseCondition (69)
        on left: 64 65
        on right: 39 62
    $@16 (70)
        on left: 63
        on right: 64
    whileCondition (71)
        on left: 67
        on right: 41
    $@17 (72)
        on left: 66
        on right: 67
    ifBoolExpression (73)
        on left: 68 69 70 71
        on right: 62
    ifComparaison (74)
        on left: 72 73 74
        on right: 68
    whileBoolExpression (75)
        on left: 75 76 77 78
        on right: 67
    whileComparaison (76)
        on left: 79 80 81
        on right: 75


State 0

    0 $accept: . Program $end

    tVOID  shift, and go to state 1

    Program  go to state 2
    Main     go to state 3


State 1

    2 Main: tVOID . tMAIN tPO tPF tAO Body tAF

    tMAIN  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: Main . Functions

    tVOID  shift, and go to state 6
    tINT   shift, and go to state 7

    tVOID     [reduce using rule 12 (Function)]
    tINT      [reduce using rule 12 (Function)]
    $default  reduce using rule 12 (Function)

    Functions  go to state 8
    Function   go to state 9


State 4

    2 Main: tVOID tMAIN . tPO tPF tAO Body tAF

    tPO  shift, and go to state 10


State 5

    0 $accept: Program $end .

    $default  accept


State 6

   11 Function: tVOID . tID tPO $@4 DecArgs tPF tAO $@5 Body tAF

    tID  shift, and go to state 11


State 7

    8 Function: tINT . tID tPO $@1 DecArgs tPF tAO $@2 Body tRETURN tID tPV $@3 tAF

    tID  shift, and go to state 12


State 8

    1 Program: Main Functions .

    $default  reduce using rule 1 (Program)


State 9

    3 Functions: Function .
    4          | Function . Functions

    tVOID  shift, and go to state 6
    tINT   shift, and go to state 7

    $end      reduce using rule 3 (Functions)
    $end      [reduce using rule 12 (Function)]
    tVOID     [reduce using rule 12 (Function)]
    tINT      [reduce using rule 12 (Function)]
    $default  reduce using rule 3 (Functions)

    Functions  go to state 13
    Function   go to state 9


State 10

    2 Main: tVOID tMAIN tPO . tPF tAO Body tAF

    tPF  shift, and go to state 14


State 11

   11 Function: tVOID tID . tPO $@4 DecArgs tPF tAO $@5 Body tAF

    tPO  shift, and go to state 15


State 12

    8 Function: tINT tID . tPO $@1 DecArgs tPF tAO $@2 Body tRETURN tID tPV $@3 tAF

    tPO  shift, and go to state 16


State 13

    4 Functions: Function Functions .

    $default  reduce using rule 4 (Functions)


State 14

    2 Main: tVOID tMAIN tPO tPF . tAO Body tAF

    tAO  shift, and go to state 17


State 15

   11 Function: tVOID tID tPO . $@4 DecArgs tPF tAO $@5 Body tAF

    $default  reduce using rule 9 ($@4)

    $@4  go to state 18


State 16

    8 Function: tINT tID tPO . $@1 DecArgs tPF tAO $@2 Body tRETURN tID tPV $@3 tAF

    $default  reduce using rule 5 ($@1)

    $@1  go to state 19


State 17

    2 Main: tVOID tMAIN tPO tPF tAO . Body tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 31 (Instructions)
    $default  reduce using rule 28 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 27
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 18

   11 Function: tVOID tID tPO $@4 . DecArgs tPF tAO $@5 Body tAF

    tINT  shift, and go to state 36

    $default  reduce using rule 18 (DecArgs)

    DecArgs  go to state 37


State 19

    8 Function: tINT tID tPO $@1 . DecArgs tPF tAO $@2 Body tRETURN tID tPV $@3 tAF

    tINT  shift, and go to state 36

    $default  reduce using rule 18 (DecArgs)

    DecArgs  go to state 38


State 20

   62 ifCondition: tIF . tPO ifBoolExpression tPF $@15 elseCondition

    tPO  shift, and go to state 39


State 21

   67 whileCondition: tWHILE . tPO $@17 whileBoolExpression tPF

    tPO  shift, and go to state 40


State 22

   42 Print: tPRINT . tPO PrintArg tPF tPV

    tPO  shift, and go to state 41


State 23

   27 Type: tCONST .

    $default  reduce using rule 27 (Type)


State 24

   15 FunCall: tID . $@6 tPO $@7 CallArgs tPF
   60 VarAssign: tID . tEQUAL Operand tPV

    tEQUAL  shift, and go to state 42

    $default  reduce using rule 13 ($@6)

    $@6  go to state 43


State 25

   32 Instruction: FunCall . tPV

    tPV  shift, and go to state 44


State 26

   45 VarDeclarationAndAssign: Type . tINT tID tEQUAL tNB tPV
   46                        | Type . tINT tID tEQUAL tID tPV
   48 VarDeclaration: Type . tINT tID $@13 NextVar

    tINT  shift, and go to state 45


State 27

    2 Main: tVOID tMAIN tPO tPF tAO Body . tAF

    tAF  shift, and go to state 46


State 28

   29 Body: Instructions .

    $default  reduce using rule 29 (Body)


State 29

   30 Instructions: Instruction . Instructions

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tINT      reduce using rule 28 (Type)
    $default  reduce using rule 31 (Instructions)

    FunCall                  go to state 25
    Type                     go to state 26
    Instructions             go to state 47
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 30

   33 Instruction: Print .

    $default  reduce using rule 33 (Instruction)


State 31

   34 Instruction: VarDeclarationAndAssign .

    $default  reduce using rule 34 (Instruction)


State 32

   35 Instruction: VarDeclaration .

    $default  reduce using rule 35 (Instruction)


State 33

   36 Instruction: VarAssign .

    $default  reduce using rule 36 (Instruction)


State 34

   39 Instruction: ifCondition . tAO $@10 Body tAF $@11 elseCondition

    tAO  shift, and go to state 48


State 35

   41 Instruction: whileCondition . tAO $@12 Body tAF

    tAO  shift, and go to state 49


State 36

   17 DecArgs: tINT . tID $@8 NextDecArg

    tID  shift, and go to state 50


State 37

   11 Function: tVOID tID tPO $@4 DecArgs . tPF tAO $@5 Body tAF

    tPF  shift, and go to state 51


State 38

    8 Function: tINT tID tPO $@1 DecArgs . tPF tAO $@2 Body tRETURN tID tPV $@3 tAF

    tPF  shift, and go to state 52


State 39

   62 ifCondition: tIF tPO . ifBoolExpression tPF $@15 elseCondition

    tTRUE   shift, and go to state 53
    tFALSE  shift, and go to state 54
    tNB     shift, and go to state 55
    tID     shift, and go to state 56

    FunCall           go to state 57
    Operand           go to state 58
    Operations        go to state 59
    ifBoolExpression  go to state 60
    ifComparaison     go to state 61


State 40

   67 whileCondition: tWHILE tPO . $@17 whileBoolExpression tPF

    $default  reduce using rule 66 ($@17)

    $@17  go to state 62


State 41

   42 Print: tPRINT tPO . PrintArg tPF tPV

    tNB  shift, and go to state 63
    tID  shift, and go to state 64

    PrintArg  go to state 65


State 42

   60 VarAssign: tID tEQUAL . Operand tPV

    tNB  shift, and go to state 55
    tID  shift, and go to state 66

    FunCall     go to state 57
    Operand     go to state 67
    Operations  go to state 59


State 43

   15 FunCall: tID $@6 . tPO $@7 CallArgs tPF

    tPO  shift, and go to state 68


State 44

   32 Instruction: FunCall tPV .

    $default  reduce using rule 32 (Instruction)


State 45

   45 VarDeclarationAndAssign: Type tINT . tID tEQUAL tNB tPV
   46                        | Type tINT . tID tEQUAL tID tPV
   48 VarDeclaration: Type tINT . tID $@13 NextVar

    tID  shift, and go to state 69


State 46

    2 Main: tVOID tMAIN tPO tPF tAO Body tAF .

    $default  reduce using rule 2 (Main)


State 47

   30 Instructions: Instruction Instructions .

    $default  reduce using rule 30 (Instructions)


State 48

   39 Instruction: ifCondition tAO . $@10 Body tAF $@11 elseCondition

    $default  reduce using rule 37 ($@10)

    $@10  go to state 70


State 49

   41 Instruction: whileCondition tAO . $@12 Body tAF

    $default  reduce using rule 40 ($@12)

    $@12  go to state 71


State 50

   17 DecArgs: tINT tID . $@8 NextDecArg

    $default  reduce using rule 16 ($@8)

    $@8  go to state 72


State 51

   11 Function: tVOID tID tPO $@4 DecArgs tPF . tAO $@5 Body tAF

    tAO  shift, and go to state 73


State 52

    8 Function: tINT tID tPO $@1 DecArgs tPF . tAO $@2 Body tRETURN tID tPV $@3 tAF

    tAO  shift, and go to state 74


State 53

   70 ifBoolExpression: tTRUE .

    $default  reduce using rule 70 (ifBoolExpression)


State 54

   71 ifBoolExpression: tFALSE .

    $default  reduce using rule 71 (ifBoolExpression)


State 55

   55 Operand: tNB .

    $default  reduce using rule 55 (Operand)


State 56

   15 FunCall: tID . $@6 tPO $@7 CallArgs tPF
   54 Operand: tID .
   69 ifBoolExpression: tID .

    tPO       reduce using rule 13 ($@6)
    tPF       reduce using rule 69 (ifBoolExpression)
    $default  reduce using rule 54 (Operand)

    $@6  go to state 43


State 57

   52 Operand: FunCall .

    $default  reduce using rule 52 (Operand)


State 58

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   72 ifComparaison: Operand . tEQEQ Operand
   73              | Operand . tINF Operand
   74              | Operand . tSUP Operand

    tSUB   shift, and go to state 75
    tADD   shift, and go to state 76
    tMUL   shift, and go to state 77
    tDIV   shift, and go to state 78
    tINF   shift, and go to state 79
    tSUP   shift, and go to state 80
    tEQEQ  shift, and go to state 81


State 59

   53 Operand: Operations .

    $default  reduce using rule 53 (Operand)


State 60

   62 ifCondition: tIF tPO ifBoolExpression . tPF $@15 elseCondition

    tPF  shift, and go to state 82


State 61

   68 ifBoolExpression: ifComparaison .

    $default  reduce using rule 68 (ifBoolExpression)


State 62

   67 whileCondition: tWHILE tPO $@17 . whileBoolExpression tPF

    tTRUE   shift, and go to state 83
    tFALSE  shift, and go to state 84
    tNB     shift, and go to state 55
    tID     shift, and go to state 85

    FunCall              go to state 57
    Operand              go to state 86
    Operations           go to state 59
    whileBoolExpression  go to state 87
    whileComparaison     go to state 88


State 63

   44 PrintArg: tNB .

    $default  reduce using rule 44 (PrintArg)


State 64

   43 PrintArg: tID .

    $default  reduce using rule 43 (PrintArg)


State 65

   42 Print: tPRINT tPO PrintArg . tPF tPV

    tPF  shift, and go to state 89


State 66

   15 FunCall: tID . $@6 tPO $@7 CallArgs tPF
   54 Operand: tID .

    tPO       reduce using rule 13 ($@6)
    $default  reduce using rule 54 (Operand)

    $@6  go to state 43


State 67

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   60 VarAssign: tID tEQUAL Operand . tPV

    tPV   shift, and go to state 90
    tSUB  shift, and go to state 75
    tADD  shift, and go to state 76
    tMUL  shift, and go to state 77
    tDIV  shift, and go to state 78


State 68

   15 FunCall: tID $@6 tPO . $@7 CallArgs tPF

    $default  reduce using rule 14 ($@7)

    $@7  go to state 91


State 69

   45 VarDeclarationAndAssign: Type tINT tID . tEQUAL tNB tPV
   46                        | Type tINT tID . tEQUAL tID tPV
   48 VarDeclaration: Type tINT tID . $@13 NextVar

    tEQUAL  shift, and go to state 92

    $default  reduce using rule 47 ($@13)

    $@13  go to state 93


State 70

   39 Instruction: ifCondition tAO $@10 . Body tAF $@11 elseCondition

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 31 (Instructions)
    $default  reduce using rule 28 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 94
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 71

   41 Instruction: whileCondition tAO $@12 . Body tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 31 (Instructions)
    $default  reduce using rule 28 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 95
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 72

   17 DecArgs: tINT tID $@8 . NextDecArg

    tV  shift, and go to state 96

    $default  reduce using rule 20 (NextDecArg)

    NextDecArg  go to state 97


State 73

   11 Function: tVOID tID tPO $@4 DecArgs tPF tAO . $@5 Body tAF

    $default  reduce using rule 10 ($@5)

    $@5  go to state 98


State 74

    8 Function: tINT tID tPO $@1 DecArgs tPF tAO . $@2 Body tRETURN tID tPV $@3 tAF

    $default  reduce using rule 6 ($@2)

    $@2  go to state 99


State 75

   57 Operations: Operand tSUB . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 66

    FunCall     go to state 57
    Operand     go to state 100
    Operations  go to state 59


State 76

   56 Operations: Operand tADD . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 66

    FunCall     go to state 57
    Operand     go to state 101
    Operations  go to state 59


State 77

   58 Operations: Operand tMUL . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 66

    FunCall     go to state 57
    Operand     go to state 102
    Operations  go to state 59


State 78

   59 Operations: Operand tDIV . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 66

    FunCall     go to state 57
    Operand     go to state 103
    Operations  go to state 59


State 79

   73 ifComparaison: Operand tINF . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 66

    FunCall     go to state 57
    Operand     go to state 104
    Operations  go to state 59


State 80

   74 ifComparaison: Operand tSUP . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 66

    FunCall     go to state 57
    Operand     go to state 105
    Operations  go to state 59


State 81

   72 ifComparaison: Operand tEQEQ . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 66

    FunCall     go to state 57
    Operand     go to state 106
    Operations  go to state 59


State 82

   62 ifCondition: tIF tPO ifBoolExpression tPF . $@15 elseCondition

    $default  reduce using rule 61 ($@15)

    $@15  go to state 107


State 83

   77 whileBoolExpression: tTRUE .

    $default  reduce using rule 77 (whileBoolExpression)


State 84

   78 whileBoolExpression: tFALSE .

    $default  reduce using rule 78 (whileBoolExpression)


State 85

   15 FunCall: tID . $@6 tPO $@7 CallArgs tPF
   54 Operand: tID .
   76 whileBoolExpression: tID .

    tPO       reduce using rule 13 ($@6)
    tPF       reduce using rule 76 (whileBoolExpression)
    $default  reduce using rule 54 (Operand)

    $@6  go to state 43


State 86

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   79 whileComparaison: Operand . tEQEQ Operand
   80                 | Operand . tINF Operand
   81                 | Operand . tSUP Operand

    tSUB   shift, and go to state 75
    tADD   shift, and go to state 76
    tMUL   shift, and go to state 77
    tDIV   shift, and go to state 78
    tINF   shift, and go to state 108
    tSUP   shift, and go to state 109
    tEQEQ  shift, and go to state 110


State 87

   67 whileCondition: tWHILE tPO $@17 whileBoolExpression . tPF

    tPF  shift, and go to state 111


State 88

   75 whileBoolExpression: whileComparaison .

    $default  reduce using rule 75 (whileBoolExpression)


State 89

   42 Print: tPRINT tPO PrintArg tPF . tPV

    tPV  shift, and go to state 112


State 90

   60 VarAssign: tID tEQUAL Operand tPV .

    $default  reduce using rule 60 (VarAssign)


State 91

   15 FunCall: tID $@6 tPO $@7 . CallArgs tPF

    tNB  shift, and go to state 113
    tID  shift, and go to state 114

    $default  reduce using rule 24 (CallArgs)

    CallArgs  go to state 115


State 92

   45 VarDeclarationAndAssign: Type tINT tID tEQUAL . tNB tPV
   46                        | Type tINT tID tEQUAL . tID tPV

    tNB  shift, and go to state 116
    tID  shift, and go to state 117


State 93

   48 VarDeclaration: Type tINT tID $@13 . NextVar

    tPV     shift, and go to state 118
    tCONST  shift, and go to state 23

    $default  reduce using rule 28 (Type)

    Type     go to state 119
    NextVar  go to state 120


State 94

   39 Instruction: ifCondition tAO $@10 Body . tAF $@11 elseCondition

    tAF  shift, and go to state 121


State 95

   41 Instruction: whileCondition tAO $@12 Body . tAF

    tAF  shift, and go to state 122


State 96

   19 NextDecArg: tV . DecArgs

    tINT  shift, and go to state 36

    $default  reduce using rule 18 (DecArgs)

    DecArgs  go to state 123


State 97

   17 DecArgs: tINT tID $@8 NextDecArg .

    $default  reduce using rule 17 (DecArgs)


State 98

   11 Function: tVOID tID tPO $@4 DecArgs tPF tAO $@5 . Body tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 31 (Instructions)
    $default  reduce using rule 28 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 124
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 99

    8 Function: tINT tID tPO $@1 DecArgs tPF tAO $@2 . Body tRETURN tID tPV $@3 tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tRETURN   reduce using rule 31 (Instructions)
    $default  reduce using rule 28 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 125
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 100

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   57           | Operand tSUB Operand .
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand

    tMUL  shift, and go to state 77
    tDIV  shift, and go to state 78

    $default  reduce using rule 57 (Operations)


State 101

   56 Operations: Operand . tADD Operand
   56           | Operand tADD Operand .
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand

    tMUL  shift, and go to state 77
    tDIV  shift, and go to state 78

    $default  reduce using rule 56 (Operations)


State 102

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   58           | Operand tMUL Operand .
   59           | Operand . tDIV Operand

    $default  reduce using rule 58 (Operations)


State 103

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   59           | Operand tDIV Operand .

    $default  reduce using rule 59 (Operations)


State 104

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   73 ifComparaison: Operand tINF Operand .

    tSUB  shift, and go to state 75
    tADD  shift, and go to state 76
    tMUL  shift, and go to state 77
    tDIV  shift, and go to state 78

    $default  reduce using rule 73 (ifComparaison)


State 105

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   74 ifComparaison: Operand tSUP Operand .

    tSUB  shift, and go to state 75
    tADD  shift, and go to state 76
    tMUL  shift, and go to state 77
    tDIV  shift, and go to state 78

    $default  reduce using rule 74 (ifComparaison)


State 106

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   72 ifComparaison: Operand tEQEQ Operand .

    tSUB  shift, and go to state 75
    tADD  shift, and go to state 76
    tMUL  shift, and go to state 77
    tDIV  shift, and go to state 78

    $default  reduce using rule 72 (ifComparaison)


State 107

   62 ifCondition: tIF tPO ifBoolExpression tPF $@15 . elseCondition

    tELSE  shift, and go to state 126

    $default  reduce using rule 65 (elseCondition)

    elseCondition  go to state 127


State 108

   80 whileComparaison: Operand tINF . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 66

    FunCall     go to state 57
    Operand     go to state 128
    Operations  go to state 59


State 109

   81 whileComparaison: Operand tSUP . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 66

    FunCall     go to state 57
    Operand     go to state 129
    Operations  go to state 59


State 110

   79 whileComparaison: Operand tEQEQ . Operand

    tNB  shift, and go to state 55
    tID  shift, and go to state 66

    FunCall     go to state 57
    Operand     go to state 130
    Operations  go to state 59


State 111

   67 whileCondition: tWHILE tPO $@17 whileBoolExpression tPF .

    $default  reduce using rule 67 (whileCondition)


State 112

   42 Print: tPRINT tPO PrintArg tPF tPV .

    $default  reduce using rule 42 (Print)


State 113

   23 CallArgs: tNB . CallArgNext

    tV  shift, and go to state 131

    $default  reduce using rule 26 (CallArgNext)

    CallArgNext  go to state 132


State 114

   22 CallArgs: tID . $@9 CallArgNext

    $default  reduce using rule 21 ($@9)

    $@9  go to state 133


State 115

   15 FunCall: tID $@6 tPO $@7 CallArgs . tPF

    tPF  shift, and go to state 134


State 116

   45 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB . tPV

    tPV  shift, and go to state 135


State 117

   46 VarDeclarationAndAssign: Type tINT tID tEQUAL tID . tPV

    tPV  shift, and go to state 136


State 118

   51 NextVar: tPV .

    $default  reduce using rule 51 (NextVar)


State 119

   50 NextVar: Type . tV tID $@14 NextVar

    tV  shift, and go to state 137


State 120

   48 VarDeclaration: Type tINT tID $@13 NextVar .

    $default  reduce using rule 48 (VarDeclaration)


State 121

   39 Instruction: ifCondition tAO $@10 Body tAF . $@11 elseCondition

    $default  reduce using rule 38 ($@11)

    $@11  go to state 138


State 122

   41 Instruction: whileCondition tAO $@12 Body tAF .

    $default  reduce using rule 41 (Instruction)


State 123

   19 NextDecArg: tV DecArgs .

    $default  reduce using rule 19 (NextDecArg)


State 124

   11 Function: tVOID tID tPO $@4 DecArgs tPF tAO $@5 Body . tAF

    tAF  shift, and go to state 139


State 125

    8 Function: tINT tID tPO $@1 DecArgs tPF tAO $@2 Body . tRETURN tID tPV $@3 tAF

    tRETURN  shift, and go to state 140


State 126

   64 elseCondition: tELSE . tAO $@16 Body tAF

    tAO  shift, and go to state 141


State 127

   62 ifCondition: tIF tPO ifBoolExpression tPF $@15 elseCondition .

    $default  reduce using rule 62 (ifCondition)


State 128

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   80 whileComparaison: Operand tINF Operand .

    tSUB  shift, and go to state 75
    tADD  shift, and go to state 76
    tMUL  shift, and go to state 77
    tDIV  shift, and go to state 78

    $default  reduce using rule 80 (whileComparaison)


State 129

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   81 whileComparaison: Operand tSUP Operand .

    tSUB  shift, and go to state 75
    tADD  shift, and go to state 76
    tMUL  shift, and go to state 77
    tDIV  shift, and go to state 78

    $default  reduce using rule 81 (whileComparaison)


State 130

   56 Operations: Operand . tADD Operand
   57           | Operand . tSUB Operand
   58           | Operand . tMUL Operand
   59           | Operand . tDIV Operand
   79 whileComparaison: Operand tEQEQ Operand .

    tSUB  shift, and go to state 75
    tADD  shift, and go to state 76
    tMUL  shift, and go to state 77
    tDIV  shift, and go to state 78

    $default  reduce using rule 79 (whileComparaison)


State 131

   25 CallArgNext: tV . CallArgs

    tNB  shift, and go to state 113
    tID  shift, and go to state 114

    $default  reduce using rule 24 (CallArgs)

    CallArgs  go to state 142


State 132

   23 CallArgs: tNB CallArgNext .

    $default  reduce using rule 23 (CallArgs)


State 133

   22 CallArgs: tID $@9 . CallArgNext

    tV  shift, and go to state 131

    $default  reduce using rule 26 (CallArgNext)

    CallArgNext  go to state 143


State 134

   15 FunCall: tID $@6 tPO $@7 CallArgs tPF .

    $default  reduce using rule 15 (FunCall)


State 135

   45 VarDeclarationAndAssign: Type tINT tID tEQUAL tNB tPV .

    $default  reduce using rule 45 (VarDeclarationAndAssign)


State 136

   46 VarDeclarationAndAssign: Type tINT tID tEQUAL tID tPV .

    $default  reduce using rule 46 (VarDeclarationAndAssign)


State 137

   50 NextVar: Type tV . tID $@14 NextVar

    tID  shift, and go to state 144


State 138

   39 Instruction: ifCondition tAO $@10 Body tAF $@11 . elseCondition

    tELSE  shift, and go to state 126

    $default  reduce using rule 65 (elseCondition)

    elseCondition  go to state 145


State 139

   11 Function: tVOID tID tPO $@4 DecArgs tPF tAO $@5 Body tAF .

    $default  reduce using rule 11 (Function)


State 140

    8 Function: tINT tID tPO $@1 DecArgs tPF tAO $@2 Body tRETURN . tID tPV $@3 tAF

    tID  shift, and go to state 146


State 141

   64 elseCondition: tELSE tAO . $@16 Body tAF

    $default  reduce using rule 63 ($@16)

    $@16  go to state 147


State 142

   25 CallArgNext: tV CallArgs .

    $default  reduce using rule 25 (CallArgNext)


State 143

   22 CallArgs: tID $@9 CallArgNext .

    $default  reduce using rule 22 (CallArgs)


State 144

   50 NextVar: Type tV tID . $@14 NextVar

    $default  reduce using rule 49 ($@14)

    $@14  go to state 148


State 145

   39 Instruction: ifCondition tAO $@10 Body tAF $@11 elseCondition .

    $default  reduce using rule 39 (Instruction)


State 146

    8 Function: tINT tID tPO $@1 DecArgs tPF tAO $@2 Body tRETURN tID . tPV $@3 tAF

    tPV  shift, and go to state 149


State 147

   64 elseCondition: tELSE tAO $@16 . Body tAF

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tCONST  shift, and go to state 23
    tID     shift, and go to state 24

    tAF       reduce using rule 31 (Instructions)
    $default  reduce using rule 28 (Type)

    FunCall                  go to state 25
    Type                     go to state 26
    Body                     go to state 150
    Instructions             go to state 28
    Instruction              go to state 29
    Print                    go to state 30
    VarDeclarationAndAssign  go to state 31
    VarDeclaration           go to state 32
    VarAssign                go to state 33
    ifCondition              go to state 34
    whileCondition           go to state 35


State 148

   50 NextVar: Type tV tID $@14 . NextVar

    tPV     shift, and go to state 118
    tCONST  shift, and go to state 23

    $default  reduce using rule 28 (Type)

    Type     go to state 119
    NextVar  go to state 151


State 149

    8 Function: tINT tID tPO $@1 DecArgs tPF tAO $@2 Body tRETURN tID tPV . $@3 tAF

    $default  reduce using rule 7 ($@3)

    $@3  go to state 152


State 150

   64 elseCondition: tELSE tAO $@16 Body . tAF

    tAF  shift, and go to state 153


State 151

   50 NextVar: Type tV tID $@14 NextVar .

    $default  reduce using rule 50 (NextVar)


State 152

    8 Function: tINT tID tPO $@1 DecArgs tPF tAO $@2 Body tRETURN tID tPV $@3 . tAF

    tAF  shift, and go to state 154


State 153

   64 elseCondition: tELSE tAO $@16 Body tAF .

    $default  reduce using rule 64 (elseCondition)


State 154

    8 Function: tINT tID tPO $@1 DecArgs tPF tAO $@2 Body tRETURN tID tPV $@3 tAF .

    $default  reduce using rule 8 (Function)
