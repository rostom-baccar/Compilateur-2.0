Terminals unused in grammar

    tPRINT
    tELSE


Rules useless in parser due to conflicts

   23 Instruction: %empty


State 19 conflicts: 6 shift/reduce, 1 reduce/reduce
State 30 conflicts: 6 shift/reduce, 1 reduce/reduce
State 56 conflicts: 6 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: Function
    3          | Function Functions

    4 Function: FunType FunName tPO DecArgs tPF tAO Body tAF

    5 FunCall: FunName tPO CallArgs tPF tPV

    6 DecArgs: Type tID NextDecArg
    7        | %empty

    8 NextDecArg: tV DecArgs
    9           | %empty

   10 CallArgs: Operand CallArgNext
   11         | %empty

   12 CallArgNext: tV CallArgs
   13            | %empty

   14 Type: tINT
   15     | tSTRING

   16 FunType: tVOID
   17        | Type

   18 FunName: tMAIN
   19        | tID

   20 Body: Instructions

   21 Instructions: Instruction Instructions
   22             | %empty

   23 Instruction: %empty
   24            | FunCall
   25            | VarDeclaration
   26            | VarAssign

   27 $@1: %empty

   28 Instruction: Condition tAO $@1 Body tAF

   29 VarDeclaration: Type tID tPV

   30 Operand: FunCall
   31        | Operations
   32        | tID
   33        | tNB

   34 Operations: Operand tADD Operand
   35           | Operand tSUB Operand
   36           | Operand tMUL Operand
   37           | Operand tDIV Operand

   38 VarAssign: tID tEQUAL Operand tPV

   39 Condition: tIF ArgCondition
   40          | tWHILE ArgCondition

   41 ArgCondition: tPO BoolExpression tPF

   42 BoolExpression: Comparaison
   43               | tID

   44 Comparator: tINF
   45           | tSUP

   46 Comparaison: Operand Comparator Operand


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tMAIN (258) 18
    tIF (259) 39
    tWHILE (260) 40
    tPRINT (261)
    tELSE (262)
    tAO (263) 4 28
    tAF (264) 4 28
    tPO (265) 4 5 41
    tPF (266) 4 5 41
    tV (267) 8 12
    tPV (268) 5 29 38
    tEQUAL (269) 38
    tVOID (270) 16
    tINT (271) 14
    tSTRING (272) 15
    tSUB (273) 35
    tADD (274) 34
    tMUL (275) 36
    tDIV (276) 37
    tINF (277) 44
    tSUP (278) 45
    tNB <nb> (279) 33
    tID <string> (280) 6 19 29 32 38 43


Nonterminals, with rules where they appear

    $accept (26)
        on left: 0
    Program (27)
        on left: 1
        on right: 0
    Functions (28)
        on left: 2 3
        on right: 1 3
    Function (29)
        on left: 4
        on right: 2 3
    FunCall (30)
        on left: 5
        on right: 24 30
    DecArgs (31)
        on left: 6 7
        on right: 4 8
    NextDecArg (32)
        on left: 8 9
        on right: 6
    CallArgs (33)
        on left: 10 11
        on right: 5 12
    CallArgNext (34)
        on left: 12 13
        on right: 10
    Type <nb> (35)
        on left: 14 15
        on right: 6 17 29
    FunType (36)
        on left: 16 17
        on right: 4
    FunName (37)
        on left: 18 19
        on right: 4 5
    Body (38)
        on left: 20
        on right: 4 28
    Instructions (39)
        on left: 21 22
        on right: 20 21
    Instruction (40)
        on left: 23 24 25 26 28
        on right: 21
    $@1 (41)
        on left: 27
        on right: 28
    VarDeclaration (42)
        on left: 29
        on right: 25
    Operand (43)
        on left: 30 31 32 33
        on right: 10 34 35 36 37 38 46
    Operations (44)
        on left: 34 35 36 37
        on right: 31
    VarAssign (45)
        on left: 38
        on right: 26
    Condition (46)
        on left: 39 40
        on right: 28
    ArgCondition (47)
        on left: 41
        on right: 39 40
    BoolExpression (48)
        on left: 42 43
        on right: 41
    Comparator (49)
        on left: 44 45
        on right: 46
    Comparaison (50)
        on left: 46
        on right: 42


State 0

    0 $accept: . Program $end

    tVOID    shift, and go to state 1
    tINT     shift, and go to state 2
    tSTRING  shift, and go to state 3

    Program    go to state 4
    Functions  go to state 5
    Function   go to state 6
    Type       go to state 7
    FunType    go to state 8


State 1

   16 FunType: tVOID .

    $default  reduce using rule 16 (FunType)


State 2

   14 Type: tINT .

    $default  reduce using rule 14 (Type)


State 3

   15 Type: tSTRING .

    $default  reduce using rule 15 (Type)


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 9


State 5

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 6

    2 Functions: Function .
    3          | Function . Functions

    tVOID    shift, and go to state 1
    tINT     shift, and go to state 2
    tSTRING  shift, and go to state 3

    $default  reduce using rule 2 (Functions)

    Functions  go to state 10
    Function   go to state 6
    Type       go to state 7
    FunType    go to state 8


State 7

   17 FunType: Type .

    $default  reduce using rule 17 (FunType)


State 8

    4 Function: FunType . FunName tPO DecArgs tPF tAO Body tAF

    tMAIN  shift, and go to state 11
    tID    shift, and go to state 12

    FunName  go to state 13


State 9

    0 $accept: Program $end .

    $default  accept


State 10

    3 Functions: Function Functions .

    $default  reduce using rule 3 (Functions)


State 11

   18 FunName: tMAIN .

    $default  reduce using rule 18 (FunName)


State 12

   19 FunName: tID .

    $default  reduce using rule 19 (FunName)


State 13

    4 Function: FunType FunName . tPO DecArgs tPF tAO Body tAF

    tPO  shift, and go to state 14


State 14

    4 Function: FunType FunName tPO . DecArgs tPF tAO Body tAF

    tINT     shift, and go to state 2
    tSTRING  shift, and go to state 3

    $default  reduce using rule 7 (DecArgs)

    DecArgs  go to state 15
    Type     go to state 16


State 15

    4 Function: FunType FunName tPO DecArgs . tPF tAO Body tAF

    tPF  shift, and go to state 17


State 16

    6 DecArgs: Type . tID NextDecArg

    tID  shift, and go to state 18


State 17

    4 Function: FunType FunName tPO DecArgs tPF . tAO Body tAF

    tAO  shift, and go to state 19


State 18

    6 DecArgs: Type tID . NextDecArg

    tV  shift, and go to state 20

    $default  reduce using rule 9 (NextDecArg)

    NextDecArg  go to state 21


State 19

    4 Function: FunType FunName tPO DecArgs tPF tAO . Body tAF

    tMAIN    shift, and go to state 11
    tIF      shift, and go to state 22
    tWHILE   shift, and go to state 23
    tINT     shift, and go to state 2
    tSTRING  shift, and go to state 3
    tID      shift, and go to state 24

    tMAIN     [reduce using rule 23 (Instruction)]
    tIF       [reduce using rule 23 (Instruction)]
    tWHILE    [reduce using rule 23 (Instruction)]
    tAF       reduce using rule 22 (Instructions)
    tAF       [reduce using rule 23 (Instruction)]
    tINT      [reduce using rule 23 (Instruction)]
    tSTRING   [reduce using rule 23 (Instruction)]
    tID       [reduce using rule 23 (Instruction)]
    $default  reduce using rule 22 (Instructions)

    FunCall         go to state 25
    Type            go to state 26
    FunName         go to state 27
    Body            go to state 28
    Instructions    go to state 29
    Instruction     go to state 30
    VarDeclaration  go to state 31
    VarAssign       go to state 32
    Condition       go to state 33


State 20

    8 NextDecArg: tV . DecArgs

    tINT     shift, and go to state 2
    tSTRING  shift, and go to state 3

    $default  reduce using rule 7 (DecArgs)

    DecArgs  go to state 34
    Type     go to state 16


State 21

    6 DecArgs: Type tID NextDecArg .

    $default  reduce using rule 6 (DecArgs)


State 22

   39 Condition: tIF . ArgCondition

    tPO  shift, and go to state 35

    ArgCondition  go to state 36


State 23

   40 Condition: tWHILE . ArgCondition

    tPO  shift, and go to state 35

    ArgCondition  go to state 37


State 24

   19 FunName: tID .
   38 VarAssign: tID . tEQUAL Operand tPV

    tEQUAL  shift, and go to state 38

    $default  reduce using rule 19 (FunName)


State 25

   24 Instruction: FunCall .

    $default  reduce using rule 24 (Instruction)


State 26

   29 VarDeclaration: Type . tID tPV

    tID  shift, and go to state 39


State 27

    5 FunCall: FunName . tPO CallArgs tPF tPV

    tPO  shift, and go to state 40


State 28

    4 Function: FunType FunName tPO DecArgs tPF tAO Body . tAF

    tAF  shift, and go to state 41


State 29

   20 Body: Instructions .

    $default  reduce using rule 20 (Body)


State 30

   21 Instructions: Instruction . Instructions

    tMAIN    shift, and go to state 11
    tIF      shift, and go to state 22
    tWHILE   shift, and go to state 23
    tINT     shift, and go to state 2
    tSTRING  shift, and go to state 3
    tID      shift, and go to state 24

    tMAIN     [reduce using rule 23 (Instruction)]
    tIF       [reduce using rule 23 (Instruction)]
    tWHILE    [reduce using rule 23 (Instruction)]
    tAF       reduce using rule 22 (Instructions)
    tAF       [reduce using rule 23 (Instruction)]
    tINT      [reduce using rule 23 (Instruction)]
    tSTRING   [reduce using rule 23 (Instruction)]
    tID       [reduce using rule 23 (Instruction)]
    $default  reduce using rule 22 (Instructions)

    FunCall         go to state 25
    Type            go to state 26
    FunName         go to state 27
    Instructions    go to state 42
    Instruction     go to state 30
    VarDeclaration  go to state 31
    VarAssign       go to state 32
    Condition       go to state 33


State 31

   25 Instruction: VarDeclaration .

    $default  reduce using rule 25 (Instruction)


State 32

   26 Instruction: VarAssign .

    $default  reduce using rule 26 (Instruction)


State 33

   28 Instruction: Condition . tAO $@1 Body tAF

    tAO  shift, and go to state 43


State 34

    8 NextDecArg: tV DecArgs .

    $default  reduce using rule 8 (NextDecArg)


State 35

   41 ArgCondition: tPO . BoolExpression tPF

    tMAIN  shift, and go to state 11
    tNB    shift, and go to state 44
    tID    shift, and go to state 45

    FunCall         go to state 46
    FunName         go to state 27
    Operand         go to state 47
    Operations      go to state 48
    BoolExpression  go to state 49
    Comparaison     go to state 50


State 36

   39 Condition: tIF ArgCondition .

    $default  reduce using rule 39 (Condition)


State 37

   40 Condition: tWHILE ArgCondition .

    $default  reduce using rule 40 (Condition)


State 38

   38 VarAssign: tID tEQUAL . Operand tPV

    tMAIN  shift, and go to state 11
    tNB    shift, and go to state 44
    tID    shift, and go to state 51

    FunCall     go to state 46
    FunName     go to state 27
    Operand     go to state 52
    Operations  go to state 48


State 39

   29 VarDeclaration: Type tID . tPV

    tPV  shift, and go to state 53


State 40

    5 FunCall: FunName tPO . CallArgs tPF tPV

    tMAIN  shift, and go to state 11
    tNB    shift, and go to state 44
    tID    shift, and go to state 51

    $default  reduce using rule 11 (CallArgs)

    FunCall     go to state 46
    CallArgs    go to state 54
    FunName     go to state 27
    Operand     go to state 55
    Operations  go to state 48


State 41

    4 Function: FunType FunName tPO DecArgs tPF tAO Body tAF .

    $default  reduce using rule 4 (Function)


State 42

   21 Instructions: Instruction Instructions .

    $default  reduce using rule 21 (Instructions)


State 43

   28 Instruction: Condition tAO . $@1 Body tAF

    $default  reduce using rule 27 ($@1)

    $@1  go to state 56


State 44

   33 Operand: tNB .

    $default  reduce using rule 33 (Operand)


State 45

   19 FunName: tID .
   32 Operand: tID .
   43 BoolExpression: tID .

    tPO       reduce using rule 19 (FunName)
    tPF       reduce using rule 43 (BoolExpression)
    $default  reduce using rule 32 (Operand)


State 46

   30 Operand: FunCall .

    $default  reduce using rule 30 (Operand)


State 47

   34 Operations: Operand . tADD Operand
   35           | Operand . tSUB Operand
   36           | Operand . tMUL Operand
   37           | Operand . tDIV Operand
   46 Comparaison: Operand . Comparator Operand

    tSUB  shift, and go to state 57
    tADD  shift, and go to state 58
    tMUL  shift, and go to state 59
    tDIV  shift, and go to state 60
    tINF  shift, and go to state 61
    tSUP  shift, and go to state 62

    Comparator  go to state 63


State 48

   31 Operand: Operations .

    $default  reduce using rule 31 (Operand)


State 49

   41 ArgCondition: tPO BoolExpression . tPF

    tPF  shift, and go to state 64


State 50

   42 BoolExpression: Comparaison .

    $default  reduce using rule 42 (BoolExpression)


State 51

   19 FunName: tID .
   32 Operand: tID .

    tPO       reduce using rule 19 (FunName)
    $default  reduce using rule 32 (Operand)


State 52

   34 Operations: Operand . tADD Operand
   35           | Operand . tSUB Operand
   36           | Operand . tMUL Operand
   37           | Operand . tDIV Operand
   38 VarAssign: tID tEQUAL Operand . tPV

    tPV   shift, and go to state 65
    tSUB  shift, and go to state 57
    tADD  shift, and go to state 58
    tMUL  shift, and go to state 59
    tDIV  shift, and go to state 60


State 53

   29 VarDeclaration: Type tID tPV .

    $default  reduce using rule 29 (VarDeclaration)


State 54

    5 FunCall: FunName tPO CallArgs . tPF tPV

    tPF  shift, and go to state 66


State 55

   10 CallArgs: Operand . CallArgNext
   34 Operations: Operand . tADD Operand
   35           | Operand . tSUB Operand
   36           | Operand . tMUL Operand
   37           | Operand . tDIV Operand

    tV    shift, and go to state 67
    tSUB  shift, and go to state 57
    tADD  shift, and go to state 58
    tMUL  shift, and go to state 59
    tDIV  shift, and go to state 60

    $default  reduce using rule 13 (CallArgNext)

    CallArgNext  go to state 68


State 56

   28 Instruction: Condition tAO $@1 . Body tAF

    tMAIN    shift, and go to state 11
    tIF      shift, and go to state 22
    tWHILE   shift, and go to state 23
    tINT     shift, and go to state 2
    tSTRING  shift, and go to state 3
    tID      shift, and go to state 24

    tMAIN     [reduce using rule 23 (Instruction)]
    tIF       [reduce using rule 23 (Instruction)]
    tWHILE    [reduce using rule 23 (Instruction)]
    tAF       reduce using rule 22 (Instructions)
    tAF       [reduce using rule 23 (Instruction)]
    tINT      [reduce using rule 23 (Instruction)]
    tSTRING   [reduce using rule 23 (Instruction)]
    tID       [reduce using rule 23 (Instruction)]
    $default  reduce using rule 22 (Instructions)

    FunCall         go to state 25
    Type            go to state 26
    FunName         go to state 27
    Body            go to state 69
    Instructions    go to state 29
    Instruction     go to state 30
    VarDeclaration  go to state 31
    VarAssign       go to state 32
    Condition       go to state 33


State 57

   35 Operations: Operand tSUB . Operand

    tMAIN  shift, and go to state 11
    tNB    shift, and go to state 44
    tID    shift, and go to state 51

    FunCall     go to state 46
    FunName     go to state 27
    Operand     go to state 70
    Operations  go to state 48


State 58

   34 Operations: Operand tADD . Operand

    tMAIN  shift, and go to state 11
    tNB    shift, and go to state 44
    tID    shift, and go to state 51

    FunCall     go to state 46
    FunName     go to state 27
    Operand     go to state 71
    Operations  go to state 48


State 59

   36 Operations: Operand tMUL . Operand

    tMAIN  shift, and go to state 11
    tNB    shift, and go to state 44
    tID    shift, and go to state 51

    FunCall     go to state 46
    FunName     go to state 27
    Operand     go to state 72
    Operations  go to state 48


State 60

   37 Operations: Operand tDIV . Operand

    tMAIN  shift, and go to state 11
    tNB    shift, and go to state 44
    tID    shift, and go to state 51

    FunCall     go to state 46
    FunName     go to state 27
    Operand     go to state 73
    Operations  go to state 48


State 61

   44 Comparator: tINF .

    $default  reduce using rule 44 (Comparator)


State 62

   45 Comparator: tSUP .

    $default  reduce using rule 45 (Comparator)


State 63

   46 Comparaison: Operand Comparator . Operand

    tMAIN  shift, and go to state 11
    tNB    shift, and go to state 44
    tID    shift, and go to state 51

    FunCall     go to state 46
    FunName     go to state 27
    Operand     go to state 74
    Operations  go to state 48


State 64

   41 ArgCondition: tPO BoolExpression tPF .

    $default  reduce using rule 41 (ArgCondition)


State 65

   38 VarAssign: tID tEQUAL Operand tPV .

    $default  reduce using rule 38 (VarAssign)


State 66

    5 FunCall: FunName tPO CallArgs tPF . tPV

    tPV  shift, and go to state 75


State 67

   12 CallArgNext: tV . CallArgs

    tMAIN  shift, and go to state 11
    tNB    shift, and go to state 44
    tID    shift, and go to state 51

    $default  reduce using rule 11 (CallArgs)

    FunCall     go to state 46
    CallArgs    go to state 76
    FunName     go to state 27
    Operand     go to state 55
    Operations  go to state 48


State 68

   10 CallArgs: Operand CallArgNext .

    $default  reduce using rule 10 (CallArgs)


State 69

   28 Instruction: Condition tAO $@1 Body . tAF

    tAF  shift, and go to state 77


State 70

   34 Operations: Operand . tADD Operand
   35           | Operand . tSUB Operand
   35           | Operand tSUB Operand .
   36           | Operand . tMUL Operand
   37           | Operand . tDIV Operand

    tMUL  shift, and go to state 59
    tDIV  shift, and go to state 60

    $default  reduce using rule 35 (Operations)


State 71

   34 Operations: Operand . tADD Operand
   34           | Operand tADD Operand .
   35           | Operand . tSUB Operand
   36           | Operand . tMUL Operand
   37           | Operand . tDIV Operand

    tMUL  shift, and go to state 59
    tDIV  shift, and go to state 60

    $default  reduce using rule 34 (Operations)


State 72

   34 Operations: Operand . tADD Operand
   35           | Operand . tSUB Operand
   36           | Operand . tMUL Operand
   36           | Operand tMUL Operand .
   37           | Operand . tDIV Operand

    $default  reduce using rule 36 (Operations)


State 73

   34 Operations: Operand . tADD Operand
   35           | Operand . tSUB Operand
   36           | Operand . tMUL Operand
   37           | Operand . tDIV Operand
   37           | Operand tDIV Operand .

    $default  reduce using rule 37 (Operations)


State 74

   34 Operations: Operand . tADD Operand
   35           | Operand . tSUB Operand
   36           | Operand . tMUL Operand
   37           | Operand . tDIV Operand
   46 Comparaison: Operand Comparator Operand .

    tSUB  shift, and go to state 57
    tADD  shift, and go to state 58
    tMUL  shift, and go to state 59
    tDIV  shift, and go to state 60

    $default  reduce using rule 46 (Comparaison)


State 75

    5 FunCall: FunName tPO CallArgs tPF tPV .

    $default  reduce using rule 5 (FunCall)


State 76

   12 CallArgNext: tV CallArgs .

    $default  reduce using rule 12 (CallArgNext)


State 77

   28 Instruction: Condition tAO $@1 Body tAF .

    $default  reduce using rule 28 (Instruction)
